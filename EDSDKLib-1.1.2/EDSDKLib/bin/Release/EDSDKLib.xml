<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EDSDKLib</name>
    </assembly>
    <members>
        <member name="T:EOSDigital.API.Camera">
            <summary>
            Represents a physical camera and provides methods to control it
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.SDKObjectEvent">
            <summary>
            The SDK object event
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.SDKProgressCallbackEvent">
            <summary>
            The SDK progress event
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.SDKPropertyEvent">
            <summary>
            The SDK property event
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.SDKStateEvent">
            <summary>
            The SDK state event
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.ProgressChanged">
            <summary>
            Fires if any process reports progress
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.LiveViewUpdated">
            <summary>
            Fires if the live view image is updated
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.DownloadReady">
            <summary>
            Fires if an image is ready for download.
            Call the <see cref="M:EOSDigital.API.Camera.DownloadFile(EOSDigital.API.DownloadInfo,System.String)"/> or <see cref="M:EOSDigital.API.Camera.DownloadFile(EOSDigital.API.DownloadInfo)"/> method to get the image or <see cref="M:EOSDigital.API.Camera.CancelDownload(EOSDigital.API.DownloadInfo)"/> to cancel.
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.PropertyChanged">
            <summary>
            Fires if a property has changed
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.StateChanged">
            <summary>
            Fires if a state has changed
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.ObjectChanged">
            <summary>
            Fires if an object has changed
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.CameraHasShutdown">
            <summary>
            This event fires if the camera is disconnected or has shut down
            </summary>
        </member>
        <member name="E:EOSDigital.API.Camera.LiveViewStopped">
            <summary>
            This event fires when the live view loop has ended
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.Info">
            <summary>
            Info about this camera (can be retrieved without an open session)
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.MainThread">
            <summary>
            Thread for executing SDK commands
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.Reference">
            <summary>
            Pointer to the SDKs camera object
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.ID">
            <summary>
            An ID for the camera object in this session. It's essentially the pointer of the Canon SDK camera object
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.SessionOpen">
            <summary>
            States if a session with this camera is open
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.IsDisposed">
            <summary>
            States if the camera is disposed. If true, it can't be used anymore
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.DeviceName">
            <summary>
            The name of the camera (can be retrieved without an open session)
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.PortName">
            <summary>
            The name of the port the camera is connected to (can be retrieved without an open session)
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.IsLiveViewOn">
            <summary>
            States if the live view is running on the computer or not
            </summary>
        </member>
        <member name="P:EOSDigital.API.Camera.IsRecordAvailable">
            <summary>
            States if Record property is available for this camera
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.CamRef">
            <summary>
            Pointer to the camera object
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.KeepLVAlive">
            <summary>
            Variable to let the live view download loop continue or stop
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.LVThread">
            <summary>
            Thread for the live view download routine
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera._IsLiveViewOn">
            <summary>
            Field for the public <see cref="P:EOSDigital.API.Camera.IsLiveViewOn"/> property
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera._IsDisposed">
            <summary>
            Field for the public <see cref="P:EOSDigital.API.Camera.IsDisposed"/> property
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera._SessionOpen">
            <summary>
            Field for the public <see cref="P:EOSDigital.API.Camera.SessionOpen"/> property
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera._IsRecordAvailable">
            <summary>
            Field for the public <see cref="P:EOSDigital.API.Camera.IsRecordAvailable"/> property
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.lvThreadLockObj">
            <summary>
            Object to set a lock around starting/stopping the live view thread
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.saveFilm">
            <summary>
            States if a film should be downloaded after filming or not
            </summary>
        </member>
        <member name="F:EOSDigital.API.Camera.useFilmingPcLv">
            <summary>
            States if the live view should be shown on the PC while filming
            </summary>
        </member>
        <member name="M:EOSDigital.API.Camera.#ctor(System.IntPtr)">
            <summary>
            Constructor
            </summary>
            <param name="camRef">Reference to the camera object</param>
            <exception cref="T:System.ArgumentNullException">Pointer to camera is zero</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:EOSDigital.API.Camera.OpenSession">
            <summary>
            Open a new session with camera
            </summary>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.CloseSession">
            <summary>
            Close session with camera
            </summary>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.Dispose">
            <summary>
            Releases all data and closes session
            </summary>
        </member>
        <member name="M:EOSDigital.API.Camera.Dispose(System.Boolean)">
            <summary>
            Releases all data and closes session
            </summary>
            <param name="managed">True if called from Dispose, false if called from the finalizer/destructor</param>
        </member>
        <member name="M:EOSDigital.API.Camera.UnsubscribeEvents">
            <summary>
            Unsubscribes all camera events from this class and the SDK
            </summary>
        </member>
        <member name="M:EOSDigital.API.Camera.TakePhoto">
            <summary>
            Takes a photo with the current camera settings with the TakePicture command
            </summary>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.TakePhotoAsync">
            <summary>
            Takes a photo with the current camera settings asynchronously with the TakePicture command
            </summary>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.TakePhotoShutter">
            <summary>
            Takes a photo with the current camera settings with the PressShutterButton command
            </summary>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.TakePhotoShutterAsync">
            <summary>
            Takes a photo with the current camera settings asynchronously with the PressShutterButton command
            </summary>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.TakePhotoBulb(System.Int32)">
            <summary>
            Takes a bulb photo with the current camera settings.
            The Tv camera value must be set to Bulb before calling this
            </summary>
            <param name="bulbTime">The time in ms for how long the shutter will be open</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.TakePhotoBulbAsync(System.Int32)">
            <summary>
            Takes a bulb photo with the current camera settings asynchronously.
            The Tv camera value must be set to Bulb before calling this
            </summary>
            <param name="bulbTime">The time in ms for how long the shutter will be open</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.DownloadFile(EOSDigital.API.DownloadInfo,System.String)">
            <summary>
            Downloads a file to given directory with the filename in the <see cref="T:EOSDigital.API.DownloadInfo"/>
            </summary>
            <param name="Info">The <see cref="T:EOSDigital.API.DownloadInfo"/> that is provided by the <see cref="E:EOSDigital.API.Camera.DownloadReady"/> event</param>
            <param name="directory">The directory where the file will be saved to</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:System.ArgumentNullException">The DownloadInfo is null</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.DownloadFile(EOSDigital.API.DownloadInfo)">
            <summary>
            Downloads a file into a stream
            </summary>
            <param name="Info">The <see cref="T:EOSDigital.API.DownloadInfo"/> that is provided by the <see cref="E:EOSDigital.API.Camera.DownloadReady"/> event</param>
            <returns>The stream containing the file data</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:System.ArgumentNullException">The DownloadInfo is null</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.CancelDownload(EOSDigital.API.DownloadInfo)">
            <summary>
            Cancels the download of an image
            </summary>
            <param name="Info">The DownloadInfo that is provided by the "<see cref="E:EOSDigital.API.Camera.DownloadReady"/>" event</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:System.ArgumentNullException">The DownloadInfo is null</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetAllVolumes">
            <summary>
            Gets all volumes available on the camera
            </summary>
            <returns>An array of CameraFileEntries that are the volumes</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetAllEntries">
            <summary>
            Gets all volumes, folders and files existing on the camera
            </summary>
            <returns>A <see cref="T:EOSDigital.API.CameraFileEntry"/> that contains all the information</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetAllImages">
            <summary>
            Gets all images saved on the cameras memory card(s)
            </summary>
            <returns>An array of CameraFileEntries that are the images</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.FormatVolume(EOSDigital.API.CameraFileEntry)">
            <summary>
            Formats a given camera volume. Get the available volumes with <see cref="M:EOSDigital.API.Camera.GetAllVolumes"/>
            <para>Warning: All data on this volume will be lost!</para>
            </summary>
            <param name="volume">The volume that will get formatted</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:System.ArgumentException">CameraFileEntry is not a volume</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.DownloadFiles(System.String,EOSDigital.API.CameraFileEntry[])">
            <summary>
            Downloads all given files into a folder. To get all images on the camera, use
            <see cref="M:EOSDigital.API.Camera.GetAllImages"/> or for all files <see cref="M:EOSDigital.API.Camera.GetAllEntries"/>
            <para>
            Note: All given CameraFileEntries will be disposed after this.
            Call <see cref="M:EOSDigital.API.Camera.GetAllImages"/> or <see cref="M:EOSDigital.API.Camera.GetAllEntries"/> to get valid entries again.
            </para>
            </summary>
            <param name="folderpath">The path to the folder where the files will be saved to</param>
            <param name="files">The files that will be downloaded</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.DeleteFiles(EOSDigital.API.CameraFileEntry[])">
            <summary>
            Deletes all given files on the camera.
            To get all images on the camera, use <see cref="M:EOSDigital.API.Camera.GetAllImages"/> or for all files <see cref="M:EOSDigital.API.Camera.GetAllEntries"/>
            <para>Warning: All given files will be lost!</para>
            </summary>
            <param name="files">The images that will be deleted</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.SetCapacity(System.Int32,System.Int32)">
            <summary>
            Tells the camera how much space is available on the host PC
            </summary>
            <param name="bytesPerSector">Bytes per HD sector</param>
            <param name="numberOfFreeClusters">Number of free clusters on the HD</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.UILock(System.Boolean)">
            <summary>
            Locks or unlocks the camera UI
            </summary>
            <param name="lockState">True to lock, false to unlock</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetSettingsList(EOSDigital.SDK.PropertyID)">
            <summary>
            Gets the list of possible values for the current camera to set.
            Only the PropertyIDs "AEModeSelect", "ISO", "Av", "Tv", "MeteringMode" and "ExposureCompensation" are allowed.
            </summary>
            <param name="propId">The property ID</param>
            <returns>A list of available values for the given property ID</returns>
        </member>
        <member name="M:EOSDigital.API.Camera.SendCommand(EOSDigital.SDK.CameraCommand,System.Int32)">
            <summary>
            Sends a command safely to the camera
            </summary>
            <param name="command">The command</param>
            <param name="inParam">Additional parameter</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.SendStatusCommand(EOSDigital.SDK.CameraStatusCommand,System.Int32)">
            <summary>
            Sends a Status Command to the camera
            </summary>
            <param name="command">The command</param>
            <param name="inParam">Additional parameter</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.StartLiveView">
            <summary>
            Starts the live view
            </summary>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.StopLiveView(System.Boolean)">
            <summary>
            Stops the live view
            </summary>
            <param name="LVOff">If true, the live view is shut off, if false, the live view will be shown on the cameras screen</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.StartFilming(System.Boolean)">
            <summary>
            Starts recording a video
            <para>Note: The camera has to be set into filming mode before using this (usually a physical switch on the camera)</para>
            <para>This works only on cameras that support filming</para>
            </summary>
            <param name="PCLiveview">If true, the live view will be transferred to the computer otherwise it's shown on the camera</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:System.InvalidOperationException">The camera is not in film mode</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.StopFilming(System.Boolean)">
            <summary>
            Stops recording a video
            </summary>
            <param name="saveFilm">If true, the <see cref="E:EOSDigital.API.Camera.DownloadReady"/> event will fire as soon as the video file is created on the camera</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.StopFilming(System.Boolean,System.Boolean)">
            <summary>
            Stops recording a video
            </summary>
            <param name="saveFilm">If true, the <see cref="E:EOSDigital.API.Camera.DownloadReady"/> event will fire as soon as the video file is created on the camera</param>
            <param name="stopLiveView">If true, the PC live view will stop and will only be shown on the camera</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.SetSetting(EOSDigital.SDK.PropertyID,System.Object,System.Int32)">
            <summary>
            Sets a value for the given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="value">The value which will be set</param>
            <param name="inParam">Additional property information</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.SetSetting(EOSDigital.SDK.PropertyID,System.String,System.Int32,System.Int32)">
            <summary>
            Sets a string value for the given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="value">The value which will be set</param>
            <param name="inParam">Additional property information</param>
            <param name="MAX">The maximum length of the string</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.SetStructSetting``1(EOSDigital.SDK.PropertyID,``0,System.Int32)">
            <summary>
            Sets a struct value for the given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="value">The value which will be set</param>
            <param name="inParam">Additional property information</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetBoolSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetByteSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetInt16Setting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetUInt16Setting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetUInt32Setting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetInt32Setting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetStringSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a string
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetBoolArrSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a integer array
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetInt16ArrSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a integer array
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetInt32ArrSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a integer array
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetByteArrSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a integer array
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetUInt32ArrSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a unsigned integer array
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetRationalArrSetting(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a rational array
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetStructSetting``1(EOSDigital.SDK.PropertyID,System.Int32)">
            <summary>
            Gets the current setting of given property ID as a struct
            </summary>
            <param name="propID">The property ID</param>
            <param name="inParam">Additional property information</param>
            <typeparam name="T">One of the EDSDK structs</typeparam>
            <returns>The current setting of the camera</returns>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetEvf_OutputDevice">
            <summary>
            There is an overflow bug in the SDK that messes up the Evf_OutputDevice property.
            With this method you can get the adjusted and correct value.
            </summary>
            <returns>The current output device of the live view</returns>
        </member>
        <member name="M:EOSDigital.API.Camera.DownloadEvf">
            <summary>
            Downloads live view images and the live view metadata continuously
            </summary>
        </member>
        <member name="M:EOSDigital.API.Camera.DownloadData(EOSDigital.API.DownloadInfo,System.IntPtr)">
            <summary>
            Downloads any data from the camera to the computer
            </summary>
            <param name="Info">The info about the object that will get downloaded</param>
            <param name="stream">The pointer to the stream where the data will be loaded into</param>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.DownloadToFile(EOSDigital.API.DownloadInfo,System.String)">
            <summary>
            Downloads any data from the camera to the computer in a file
            </summary>
            <param name="Info">The info about the object that will get downloaded</param>
            <param name="filepath">The path with filename to where the data will be saved to</param>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.DownloadToStream(EOSDigital.API.DownloadInfo)">
            <summary>
            Downloads any data from the camera to the computer into a <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="Info">The info about the object that will get downloaded</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the downloaded data</returns>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetChildren(System.IntPtr)">
            <summary>
            Gets information about camera file entries recursively
            </summary>
            <param name="ptr">Pointer to the current file object</param>
            <returns>An array of file entries</returns>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetChild(System.IntPtr,System.Int32)">
            <summary>
            Gets information about children of a folder in the cameras file system
            </summary>
            <param name="ptr">Pointer to the folder</param>
            <param name="index">Index of the child in the folder</param>
            <returns>A camera file entry of this child</returns>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.CheckState(System.Boolean)">
            <summary>
            Checks if the camera and SDK state is valid
            </summary>
            <param name="checkSession">If true, it checks if the session is open</param>
            <exception cref="T:System.ObjectDisposedException">Camera is disposed</exception>
            <exception cref="T:EOSDigital.API.CameraSessionException">Session is closed</exception>
            <exception cref="T:EOSDigital.API.SDKStateException">Canon SDK is not initialized</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetBool(System.Int32)">
            <summary>
            Creates a bool value from an integer. 1 == true, else == false
            </summary>
            <param name="val">The integer value</param>
            <returns>The bool value</returns>
        </member>
        <member name="M:EOSDigital.API.Camera.GetAllEntriesSub">
            <summary>
            Gets all volumes, folders and files existing on the camera
            </summary>
            <returns>A <see cref="T:EOSDigital.API.CameraFileEntry"/> that contains all the information</returns>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetAllImagesSub">
            <summary>
            Gets all images saved on the cameras memory card(s)
            </summary>
            <returns>An array of CameraFileEntries that are the images</returns>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.Camera.GetAllVolumesSub">
            <summary>
            Checks for all volumes available on the camera.
            </summary>
            <returns>An array of CameraFileEntries where each represents a volume (Note: content of volumes is not read)</returns>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="T:EOSDigital.API.CanonAPI">
            <summary>
            Handles camera connections
            </summary>
        </member>
        <member name="E:EOSDigital.API.CanonAPI.CameraAdded">
            <summary>
            Fires if a new camera is added
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI.CameraAddedEvent">
            <summary>
            The SDK camera added delegate
            </summary>
        </member>
        <member name="P:EOSDigital.API.CanonAPI.IsSDKInitialized">
            <summary>
            States if the SDK is initialized or not
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI.MainThread">
            <summary>
            The main SDK thread where the event loop runs
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI._IsSDKInitialized">
            <summary>
            Field for the public <see cref="P:EOSDigital.API.CanonAPI.IsSDKInitialized"/> property
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI.IsDisposed">
            <summary>
            States if the instance is disposed or not
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI.RefCount">
            <summary>
            Number of instances of this class
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI.InitLock">
            <summary>
            Object to lock on to safely de- and increment the <see cref="F:EOSDigital.API.CanonAPI.RefCount"/> value
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI.CurrentCameras">
            <summary>
            List of currently connected cameras (since the last time GetCameraList got called)
            </summary>
        </member>
        <member name="F:EOSDigital.API.CanonAPI.CameraLock">
            <summary>
            Object to lock on to safely add/remove cameras from the <see cref="F:EOSDigital.API.CanonAPI.CurrentCameras"/> list
            </summary>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.#ctor">
            <summary>
            Initializes the SDK
            </summary>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.#ctor(System.Boolean)">
            <summary>
            Initializes the SDK
            </summary>
            <param name="useCallingThread">If true, the calling thread will be used as SDK main thread;
            if false, a separate thread will be created</param>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.Dispose">
            <summary>
            Terminates the SDK and disposes resources
            </summary>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.Dispose(System.Boolean)">
            <summary>
            Terminates the SDK and disposes resources
            </summary>
            <param name="managed">True if called from Dispose, false if called from the finalizer/destructor</param>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.GetCameraList">
            <summary>
            Get a list of all cameras connected to the host.
            <para>If a camera has been connected previously, the same instance of the class is returned.</para>
            </summary>
            <returns>A list of connected cameras</returns>
            <exception cref="T:System.ObjectDisposedException">This instance has been disposed already</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.GetCameraPointerList">
            <summary>
            Get a list of all pointer of the cameras connected to the host
            </summary>
            <returns>A list of connected cameras as pointer</returns>
            <exception cref="T:System.ObjectDisposedException">This instance has been disposed already</exception>
            <exception cref="T:EOSDigital.API.SDKException">An SDK call failed</exception>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.GetFileThumb(System.String)">
            <summary>
            Gets a thumbnail from a Raw or Jpg image
            </summary>
            <param name="filepath">Path to the image file</param>
            <returns>A <see cref="T:System.Drawing.Bitmap"/> thumbnail from the provided image file</returns>
        </member>
        <member name="M:EOSDigital.API.CanonAPI.GetImage(System.IntPtr,EOSDigital.SDK.ImageSource)">
            <summary>
            Gets a <see cref="T:System.Drawing.Bitmap"/> from an EDSDK pointer to an image (Jpg or Raw)
            </summary>
            <param name="imgStream">Stream pointer to the image</param>
            <param name="imageSource">The result image type</param>
            <returns>A <see cref="T:System.Drawing.Bitmap"/> image from the given stream pointer</returns>
        </member>
        <member name="T:EOSDigital.API.CameraValue">
            <summary>
            Stores a camera value
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraValue.StringValue">
            <summary>
            The value as a string
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraValue.IntValue">
            <summary>
            The value as an UInt
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraValue.DoubleValue">
            <summary>
            The value as a double
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraValue.ValueType">
            <summary>
            The property ID of this value
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraValue.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.CameraValue"/> class
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraValue.#ctor(System.String,EOSDigital.SDK.PropertyID)">
            <summary>
            Creates a new camera value
            </summary>
            <param name="Value">The value as a string</param>
            <param name="ValueType">The property ID of the value</param>
        </member>
        <member name="M:EOSDigital.API.CameraValue.#ctor(System.Int32,EOSDigital.SDK.PropertyID)">
            <summary>
            Creates a new camera value
            </summary>
            <param name="Value">The value as an uint</param>
            <param name="ValueType">The property ID of the value</param>
        </member>
        <member name="M:EOSDigital.API.CameraValue.#ctor(System.Double,EOSDigital.SDK.PropertyID)">
            <summary>
            Creates a new camera value
            </summary>
            <param name="Value">The value as a double</param>
            <param name="ValueType">The property ID of the value</param>
        </member>
        <member name="M:EOSDigital.API.CameraValue.op_Equality(EOSDigital.API.CameraValue,EOSDigital.API.CameraValue)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.API.CameraValue"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.API.CameraValue"/></param>
            <param name="y">The second <see cref="T:EOSDigital.API.CameraValue"/></param>
            <returns>True if the <see cref="T:EOSDigital.API.CameraValue"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.API.CameraValue.op_Inequality(EOSDigital.API.CameraValue,EOSDigital.API.CameraValue)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.API.CameraValue"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.API.CameraValue"/></param>
            <param name="y">The second <see cref="T:EOSDigital.API.CameraValue"/></param>
            <returns>True if the <see cref="T:EOSDigital.API.CameraValue"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.API.CameraValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.API.CameraValue"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.API.CameraValue"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.API.CameraValue"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.API.CameraValue.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.API.CameraValue"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.API.CameraValue"/></returns>
        </member>
        <member name="M:EOSDigital.API.CameraValue.op_Implicit(EOSDigital.API.CameraValue)~System.Int32">
            <summary>
            Implicitly converts the camera value to an int
            </summary>
            <param name="x">The camera value to convert</param>
            <returns>The int representing the camera value</returns>
        </member>
        <member name="M:EOSDigital.API.CameraValue.op_Implicit(EOSDigital.API.CameraValue)~System.String">
            <summary>
            Implicitly converts the camera value to a string
            </summary>
            <param name="x">The camera value to convert</param>
            <returns>The string representing the camera value</returns>
        </member>
        <member name="M:EOSDigital.API.CameraValue.op_Implicit(EOSDigital.API.CameraValue)~System.Double">
            <summary>
            Implicitly converts the camera value to a double
            </summary>
            <param name="x">The camera value to convert</param>
            <returns>The double representing the camera value</returns>
        </member>
        <member name="M:EOSDigital.API.CameraValue.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:EOSDigital.API.CameraValue"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:EOSDigital.API.CameraValue"/>.</returns>
        </member>
        <member name="T:EOSDigital.API.ProgressHandler">
            <summary>
            A delegate for progress
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="progress">The progress. A value between 0 and 100</param>
        </member>
        <member name="T:EOSDigital.API.LiveViewUpdate">
            <summary>
            A delegate to pass a stream
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="img">An image embedded in a stream</param>
        </member>
        <member name="T:EOSDigital.API.DownloadHandler">
            <summary>
            A delegate to report an available download
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="Info">The data for the download</param>
        </member>
        <member name="T:EOSDigital.API.PropertyChangeHandler">
            <summary>
            A delegate for property changes
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="eventID">The property event ID</param>
            <param name="propID">The property ID</param>
            <param name="parameter">A parameter for additional information</param>
        </member>
        <member name="T:EOSDigital.API.StateChangeHandler">
            <summary>
            A delegate for camera state changes
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="eventID">The state event ID</param>
            <param name="parameter">A parameter for additional information</param>
        </member>
        <member name="T:EOSDigital.API.ObjectChangeHandler">
            <summary>
            A delegate for property changes
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="eventID">The object event ID</param>
            <param name="reference">A pointer to the object that has changed</param>
        </member>
        <member name="T:EOSDigital.API.CameraAddedHandler">
            <summary>
            A delegate to inform of an added camera
            </summary>
            <param name="sender">The sender of this event</param>
        </member>
        <member name="T:EOSDigital.API.CameraUpdateHandler">
            <summary>
            A delegate to inform of a change of a camera
            </summary>
            <param name="sender">The sender of this event</param>
        </member>
        <member name="T:EOSDigital.API.SDKExceptionHandler">
            <summary>
            A delegate to inform of SDK exceptions
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="ex">The SDK exception</param>
        </member>
        <member name="T:EOSDigital.API.GeneralExceptionHandler">
            <summary>
            A delegate to inform of exceptions
            </summary>
            <param name="sender">The sender of this event</param>
            <param name="ex">The exception</param>
        </member>
        <member name="T:EOSDigital.API.SDKException">
            <summary>
            An Exception that happened while handling the Canon SDK
            </summary>
        </member>
        <member name="P:EOSDigital.API.SDKException.Error">
            <summary>
            The specific SDK error code that happened
            </summary>
        </member>
        <member name="M:EOSDigital.API.SDKException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKException"/> class
            </summary>
        </member>
        <member name="M:EOSDigital.API.SDKException.#ctor(EOSDigital.SDK.ErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKException"/> class with a specified error code
            </summary>
            <param name="Error">The SDK error code of the error that happened</param>
        </member>
        <member name="M:EOSDigital.API.SDKException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKException"/> class with a specified error message
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:EOSDigital.API.SDKException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKException"/> class with a specified
            error message and a reference to the inner exception that is the cause of
            this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified</param>
        </member>
        <member name="M:EOSDigital.API.SDKException.#ctor(System.String,EOSDigital.SDK.ErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKException"/> class with a specified error message and error code
            </summary>
            <param name="Error">The SDK error code of the error that happened</param>
            <param name="message">The error message that explains the reason for the exception</param>
        </member>
        <member name="M:EOSDigital.API.SDKException.#ctor(System.String,EOSDigital.SDK.ErrorCode,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKException"/> class with a specified
            error message, error code and a reference to the inner exception that is the cause of
            this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="Error">The SDK error code of the error that happened</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:EOSDigital.API.SDKException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>  that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:EOSDigital.API.SDKException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            that holds the serialized object data about the exception being thrown</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>
            that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is a null reference</exception>
        </member>
        <member name="T:EOSDigital.API.CameraSessionException">
            <summary>
            An Exception that states a problem with the session state of the camera
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraSessionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.CameraSessionException"/> class
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraSessionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.CameraSessionException"/> class with a specified error message
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:EOSDigital.API.CameraSessionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.CameraSessionException"/> class with a specified
            error message and a reference to the inner exception that is the cause of
            this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified</param>
        </member>
        <member name="M:EOSDigital.API.CameraSessionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.CameraSessionException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>  that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:EOSDigital.API.CameraSessionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            that holds the serialized object data about the exception being thrown</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>
            that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is a null reference</exception>
        </member>
        <member name="T:EOSDigital.API.SDKStateException">
            <summary>
            An Exception that states a problem with the state of the Canon SDK
            </summary>
        </member>
        <member name="M:EOSDigital.API.SDKStateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKStateException"/> class
            </summary>
        </member>
        <member name="M:EOSDigital.API.SDKStateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKStateException"/> class with a specified error message
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:EOSDigital.API.SDKStateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKStateException"/> class with a specified
            error message and a reference to the inner exception that is the cause of
            this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified</param>
        </member>
        <member name="M:EOSDigital.API.SDKStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.SDKStateException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>  that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:EOSDigital.API.SDKStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            that holds the serialized object data about the exception being thrown</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>
            that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is a null reference</exception>
        </member>
        <member name="T:EOSDigital.API.ExecutionException">
            <summary>
            An Exception that happened while executing on an STA thread
            </summary>
        </member>
        <member name="M:EOSDigital.API.ExecutionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.ExecutionException"/> class with a specified error message
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:EOSDigital.API.ExecutionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.ExecutionException"/> class with a reference to
            the inner exception that is the cause of this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified</param>
        </member>
        <member name="M:EOSDigital.API.ExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:EOSDigital.API.ExecutionException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>  that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="M:EOSDigital.API.ExecutionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            that holds the serialized object data about the exception being thrown</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>
            that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is a null reference</exception>
        </member>
        <member name="T:EOSDigital.API.ErrorHandler">
            <summary>
            Handles errors and provides events for errors (e.g. focus problems or general exceptions)
            </summary>
        </member>
        <member name="E:EOSDigital.API.ErrorHandler.NonSevereErrorHappened">
            <summary>
            If an error happened, that does not break the program, this event is fired (e.g. a focus error)
            </summary>
        </member>
        <member name="E:EOSDigital.API.ErrorHandler.SevereErrorHappened">
            <summary>
            If an error happened on a thread that does not fall into the non-severe category, this event is fired
            </summary>
        </member>
        <member name="P:EOSDigital.API.ErrorHandler.NonSevereErrors">
            <summary>
            List of all non-severe errors. Items can be added or removed.
            </summary>
        </member>
        <member name="M:EOSDigital.API.ErrorHandler.CheckError(System.Object,EOSDigital.SDK.ErrorCode)">
            <summary>
            Checks for an error in SDK calls and checks how to treat it
            </summary>
            <param name="sender">The sender object</param>
            <param name="errorCode">The return code of the SDK call</param>
            <exception cref="T:EOSDigital.API.SDKException">If a severe error is recognized or the <see cref="E:EOSDigital.API.ErrorHandler.NonSevereErrorHappened"/>
            event is null with a non-severe error, it will be thrown as an exception</exception>
        </member>
        <member name="M:EOSDigital.API.ErrorHandler.CheckError(EOSDigital.SDK.ErrorCode)">
            <summary>
            Checks for an error in SDK calls and throws an exception if it's not <see cref="F:EOSDigital.SDK.ErrorCode.OK"/>
            </summary>
            <param name="errorCode">The return code of the SDK call</param>
            <exception cref="T:EOSDigital.API.SDKException">If <paramref name="errorCode"/> is something other than <see cref="F:EOSDigital.SDK.ErrorCode.OK"/></exception>
        </member>
        <member name="M:EOSDigital.API.ErrorHandler.CheckError(System.Int32)">
            <summary>
            Checks for an error in <see cref="M:EOSDigital.SDK.CanonSDK.EdsRetain(System.IntPtr)"/> and <see cref="M:EOSDigital.SDK.CanonSDK.EdsRelease(System.IntPtr)"/> calls
            and throws an exception if it's not valid
            </summary>
            <param name="countOrError">The return code of the SDK call</param>
            <returns>The number of references for the pointer that was used for the SDK call</returns>
        </member>
        <member name="M:EOSDigital.API.ErrorHandler.CheckError(System.Object,System.Int32)">
            <summary>
            Checks for an error in <see cref="M:EOSDigital.SDK.CanonSDK.EdsRetain(System.IntPtr)"/> and <see cref="M:EOSDigital.SDK.CanonSDK.EdsRelease(System.IntPtr)"/> calls
            and throws an exception if it's not valid
            </summary>
            <param name="sender">The calling object instance. This is currently not used and is ignored.</param>
            <param name="countOrError">The return code of the SDK call</param>
            <returns>The number of references for the pointer that was used for the SDK call</returns>
        </member>
        <member name="M:EOSDigital.API.ErrorHandler.ReportError(System.Object,System.Exception)">
            <summary>
            Reports an error that happened in a threading environment
            </summary>
            <param name="sender">The sender object</param>
            <param name="ex">The exception that happened</param>
            <returns>True if the error could be passed on; false otherwise</returns>
        </member>
        <member name="T:EOSDigital.API.DownloadInfo">
            <summary>
            Stores information to download data from the camera
            </summary>
        </member>
        <member name="F:EOSDigital.API.DownloadInfo.inRef">
            <summary>
            Pointer to the downloadable object
            </summary>
        </member>
        <member name="F:EOSDigital.API.DownloadInfo.dirInfo">
            <summary>
            Directory item info of the downloadable object
            </summary>
        </member>
        <member name="P:EOSDigital.API.DownloadInfo.Reference">
            <summary>
            Pointer to the downloadable object
            </summary>
        </member>
        <member name="P:EOSDigital.API.DownloadInfo.FileName">
            <summary>
            The name of the file. You can change it before you pass it to the
            <see cref="M:EOSDigital.API.Camera.DownloadFile(EOSDigital.API.DownloadInfo)"/> or
            <see cref="M:EOSDigital.API.Camera.DownloadFile(EOSDigital.API.DownloadInfo,System.String)"/> method.
            </summary>
        </member>
        <member name="P:EOSDigital.API.DownloadInfo.Size">
            <summary>
            The files size in bytes
            </summary>
        </member>
        <member name="P:EOSDigital.API.DownloadInfo.Size64">
            <summary>
            The files size in bytes (as ulong)
            </summary>
        </member>
        <member name="P:EOSDigital.API.DownloadInfo.IsRAW">
            <summary>
            States if the file is a RAW file or not
            </summary>
        </member>
        <member name="M:EOSDigital.API.DownloadInfo.#ctor(System.IntPtr)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.DownloadInfo"/> class
            </summary>
            <param name="inRef">Pointer to the downloadable object</param>
        </member>
        <member name="T:EOSDigital.API.CameraFileEntry">
            <summary>
            Stores information about a file or folder in a camera
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraFileEntry.Reference">
            <summary>
            Pointer to the file entry
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraFileEntry.Name">
            <summary>
            The name of the entry. (volume name, folder name or file name)
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraFileEntry.IsFolder">
            <summary>
            States if the entry is a folder or not
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraFileEntry.IsVolume">
            <summary>
            States if the entry is a volume or not
            </summary>
        </member>
        <member name="P:EOSDigital.API.CameraFileEntry.Entries">
            <summary>
            If the entry is a volume or folder, these are the subentries it contains. It's null if no subentries are present.
            </summary>
        </member>
        <member name="F:EOSDigital.API.CameraFileEntry.Ref">
            <summary>
            Pointer to the file entry
            </summary>
        </member>
        <member name="F:EOSDigital.API.CameraFileEntry.IsDisposed">
            <summary>
            States if the entry is disposed or not
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.#ctor(System.IntPtr,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.CameraFileEntry"/> class
            </summary>
            <param name="Ref"></param>
            <param name="Name"></param>
            <param name="IsFolder"></param>
            <param name="IsVolume"></param>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.Dispose">
            <summary>
            Releases this entry but not the subentries
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.DisposeAll">
            <summary>
            Releases this entry and all the subentries
            </summary>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.Dispose(System.Boolean)">
            <summary>
            Releases this entry but not the subentries
            </summary>
            <param name="managed">True if called from Dispose, false if called from the finalizer/destructor</param>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.SetThumb(System.IntPtr)">
            <summary>
            Set the thumbnail from a stream. The thumbnail depends on the image class you want to use.
            </summary>
            <param name="stream">The image stream</param>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.op_Equality(EOSDigital.API.CameraFileEntry,EOSDigital.API.CameraFileEntry)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.API.CameraFileEntry"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.API.CameraFileEntry"/></param>
            <param name="y">The second <see cref="T:EOSDigital.API.CameraFileEntry"/></param>
            <returns>True if the <see cref="T:EOSDigital.API.CameraFileEntry"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.op_Inequality(EOSDigital.API.CameraFileEntry,EOSDigital.API.CameraFileEntry)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.API.CameraFileEntry"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.API.CameraFileEntry"/></param>
            <param name="y">The second <see cref="T:EOSDigital.API.CameraFileEntry"/></param>
            <returns>True if the <see cref="T:EOSDigital.API.CameraFileEntry"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.API.CameraFileEntry"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.API.CameraFileEntry"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.API.CameraFileEntry"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.API.CameraFileEntry.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.API.CameraFileEntry"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.API.CameraFileEntry"/></returns>
        </member>
        <member name="T:EOSDigital.API.SDKStream">
            <summary>
            A Stream encapsulating an unmanaged SDK Stream.
            This class can be used to overcome the differences between SDK versions
            </summary>
        </member>
        <member name="P:EOSDigital.API.SDKStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:EOSDigital.API.SDKStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:EOSDigital.API.SDKStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:EOSDigital.API.SDKStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:EOSDigital.API.SDKStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="P:EOSDigital.API.SDKStream.Reference">
            <summary>
            Pointer to the underlying SDK stream
            </summary>
        </member>
        <member name="M:EOSDigital.API.SDKStream.#ctor(System.IntPtr)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.SDKStream"/> class from an existing SDK stream
            </summary>
            <param name="sdkStream">Pointer to the SDK stream</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.#ctor(System.String,EOSDigital.SDK.FileCreateDisposition,EOSDigital.SDK.FileAccess)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.SDKStream"/> class with an underlying SDK file stream
            </summary>
            <param name="filepath">Path to the file</param>
            <param name="createDisposition">State how to create the stream</param>
            <param name="access">File access type</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.#ctor(System.Int64)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.SDKStream"/> class with an underlying SDK memory stream.
            This stream will resize itself if the current length is exceeded
            </summary>
            <param name="length">Initial buffer size of the stream in bytes</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.#ctor(System.Byte[])">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.SDKStream"/> class with an underlying SDK memory stream.
            Note that this stream will not resize itself
            </summary>
            <param name="buffer">The memory buffer to use for the stream</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.#ctor(System.IntPtr,System.Int64)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.SDKStream"/> class with an underlying SDK memory stream.
            Note that this stream will not resize itself
            </summary>
            <param name="buffer">Pointer to the memory buffer to use for the stream</param>
            <param name="length">The size of the memory buffer in bytes</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.#ctor(System.IntPtr,System.IntPtr,System.Int64)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.SDKStream"/> class from an existing SDK stream.
            Note that this calls <see cref="M:EOSDigital.API.SDKStream.#ctor(System.IntPtr)"/> internally and ignores all parameters but <paramref name="sdkStream"/>
            </summary>
            <param name="buffer">Pointer to the underlying SDK buffer. Ignored parameter</param>
            <param name="sdkStream">Pointer to the SDK stream</param>
            <param name="length">The size of the underlying SDK buffer in bytes. Ignored parameter</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be
            written to the underlying device.
            This is not applicable to the SDK and therefore does nothing.
            </summary>
        </member>
        <member name="M:EOSDigital.API.SDKStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced by
            the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number
            of bytes requested if that many bytes are not currently available, or zero (0)
            if the end of the stream has been reached.</returns>
        </member>
        <member name="M:EOSDigital.API.SDKStream.Read(System.Byte[],System.Int64,System.Int64)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced by
            the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This can be less than the number
            of bytes requested if that many bytes are not currently available, or zero (0)
            if the end of the stream has been reached.</returns>
        </member>
        <member name="M:EOSDigital.API.SDKStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the
            reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:EOSDigital.API.SDKStream.SetLength(System.Int64)">
            <summary>
            Always throws a <see cref="T:System.NotSupportedException"/>
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances
            the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.Write(System.Byte[],System.Int64,System.Int64)">
            <summary>
            Writes a sequence of bytes to the current stream and advances
            the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:EOSDigital.API.SDKStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:EOSDigital.API.SDKStream"/> and optionally
            releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources;
            false to release only unmanaged</param>
        </member>
        <member name="T:EOSDigital.API.STAThread">
            <summary>
            This static class executes things on an STA thread and provides a method to create an STA thread
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.ExecLock">
            <summary>
            Object that is used for the lock keyword to ensure only one SDK command is executed at a time
            </summary>
        </member>
        <member name="P:EOSDigital.API.STAThread.IsSTAThread">
            <summary>
            States if the calling thread is in a Single Threaded Apartment or not
            </summary>
        </member>
        <member name="P:EOSDigital.API.STAThread.IsRunning">
            <summary>
            States if this thread is currently running
            </summary>
        </member>
        <member name="P:EOSDigital.API.STAThread.ThreadID">
            <summary>
            ID of the associated thread
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.mainThread">
            <summary>
            The main thread where everything will be executed on
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.isRunning">
            <summary>
            States if the execution thread is currently running
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.runLock">
            <summary>
            Lock object to make sure only one command at a time is executed
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.cmdLock">
            <summary>
            Lock object to ensure that an action executed on the thread does not invoke on itself
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.threadLock1">
            <summary>
            Lock object to synchronize between execution and calling thread
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.threadLock2">
            <summary>
            Lock object to synchronize between execution and calling thread
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.block1">
            <summary>
            States if the first lock is currently blocking or not
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.block2">
            <summary>
            States if the second lock is currently blocking or not
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.runAction">
            <summary>
            The action to be executed
            </summary>
        </member>
        <member name="F:EOSDigital.API.STAThread.runException">
            <summary>
            Storage for an exception that might have happened on the execution thread
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.API.STAThread"/> class
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.Start">
            <summary>
            Starts the execution loop
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.Shutdown">
            <summary>
            Shuts down the execution loop and waits for it to finish
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.Invoke(System.Action)">
            <summary>
            Executes an action on this STA thread
            </summary>
            <param name="action">The action to execute</param>
            <exception cref="T:System.ArgumentNullException">will be thrown if action is null</exception>
            <exception cref="T:EOSDigital.API.ExecutionException">if an exception is thrown on the thread,
            it will be rethrown as inner exception of this exception</exception>
        </member>
        <member name="M:EOSDigital.API.STAThread.Invoke``1(System.Func{``0})">
            <summary>
            Executes a function on this STA thread
            </summary>
            <param name="func">The function to execute</param>
            <returns>the return value of the function</returns>
            <exception cref="T:System.ArgumentNullException">will be thrown if func is null</exception>
            <exception cref="T:EOSDigital.API.ExecutionException">if an exception is thrown on the thread,
            it will be rethrown as inner exception of this exception</exception>
        </member>
        <member name="M:EOSDigital.API.STAThread.CreateThread(System.Action)">
            <summary>
            Creates a thread in a Single Threaded Apartment
            </summary>
            <param name="action">The command to run on this thread</param>
            <returns>An STA thread</returns>
        </member>
        <member name="M:EOSDigital.API.STAThread.ExecuteThread(System.Action,System.Boolean)">
            <summary>
            Executes an action on a newly created STA Thread
            and optionally waits for it to finish executing
            </summary>
            <param name="action">The action to execute</param>
            <param name="wait">If true, the action is executed synchronously or if false, asynchronously.</param>
        </member>
        <member name="M:EOSDigital.API.STAThread.ExecuteThread``1(System.Func{``0})">
            <summary>
            Executes a function on a newly created STA Thread
            </summary>
            <param name="func">The function to execute</param>
            <returns>The return value of the given function</returns>
        </member>
        <member name="M:EOSDigital.API.STAThread.NotifyThread">
            <summary>
            Notifies the execution loop to execute something
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.WaitForThread">
            <summary>
            Blocks until the execution loop is done with the work
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.ReleaseWait">
            <summary>
            Releases the waiting <see cref="M:EOSDigital.API.STAThread.WaitForThread"/> method to continue
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.WaitForNotification">
            <summary>
            The waiting routine on the execution loop
            </summary>
        </member>
        <member name="M:EOSDigital.API.STAThread.ExecutionLoop">
            <summary>
            The loop that is executed on the thread and where the work is done
            </summary>
        </member>
        <member name="T:EOSDigital.API.ValueBase">
            <summary>
            Stores CameraValues and provides methods to get those values. Abstract class.
            </summary>
        </member>
        <member name="M:EOSDigital.API.ValueBase.GetValue(System.Int32,System.Collections.Generic.List{EOSDigital.API.CameraValue})">
            <summary>
            Get the value from an int out of given possible values.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of the value to get</param>
            <param name="Values">Possible values that will be searched for the given value</param>
            <returns>The CameraValue with given uint representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.ValueBase.GetValue(System.String,System.Collections.Generic.List{EOSDigital.API.CameraValue})">
            <summary>
            Get the value from a string out of given possible values.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of value to get</param>
            <param name="Values">Possible values that will be searched for the given value</param>
            <returns>The CameraValue with given string representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.ValueBase.GetValue(System.Double,System.Collections.Generic.List{EOSDigital.API.CameraValue})">
            <summary>
            Get the value from a double out of given possible values.
            It searches for the closest representation and therefore might not return the exact input value.
            </summary>
            <param name="value">The value to get</param>
            <param name="Values">Possible values that will be searched for the given value</param>
            <returns>The CameraValue with given double representation</returns>
        </member>
        <member name="T:EOSDigital.API.ValueBase.CameraValueComparer">
            <summary>
            Comparer for <see cref="T:EOSDigital.API.CameraValue"/>s
            </summary>
        </member>
        <member name="M:EOSDigital.API.ValueBase.CameraValueComparer.Equals(EOSDigital.API.CameraValue,EOSDigital.API.CameraValue)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.API.CameraValue"/>s are equal.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.API.CameraValue"/></param>
            <param name="y">The second <see cref="T:EOSDigital.API.CameraValue"/></param>
            <returns>true if the specified <see cref="T:EOSDigital.API.CameraValue"/>s are equal; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.API.ValueBase.CameraValueComparer.GetHashCode(EOSDigital.API.CameraValue)">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.API.CameraValue"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.API.CameraValue"/></returns>
        </member>
        <member name="T:EOSDigital.API.AvValues">
            <summary>
            Stores Av Values and provides methods to get those values
            </summary>
        </member>
        <member name="P:EOSDigital.API.AvValues.Values">
            <summary>
            All values for this property
            </summary>
        </member>
        <member name="F:EOSDigital.API.AvValues.Auto">
            <summary>
            The Av <see cref="T:EOSDigital.API.CameraValue"/> of the "Auto" or "None" setting
            </summary>
        </member>
        <member name="F:EOSDigital.API.AvValues.Invalid">
            <summary>
            The Av <see cref="T:EOSDigital.API.CameraValue"/> of an invalid setting
            </summary>
        </member>
        <member name="M:EOSDigital.API.AvValues.GetValue(System.Int32)">
            <summary>
            Get the value from an int.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of the value to get</param>
            <returns>The CameraValue with given int representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.AvValues.GetValue(System.String)">
            <summary>
            Get the value from a string.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of value to get</param>
            <returns>The CameraValue with given string representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.AvValues.GetValue(System.Double)">
            <summary>
            Get the value from a double.
            It searches for the closest representation and therefore might not return the exact input value.
            </summary>
            <param name="value">The value to get</param>
            <returns>The CameraValue with given double representation</returns>
        </member>
        <member name="T:EOSDigital.API.TvValues">
            <summary>
            Stores Tv Values and provides methods to get those values
            </summary>
        </member>
        <member name="P:EOSDigital.API.TvValues.Values">
            <summary>
            All values for this property
            </summary>
        </member>
        <member name="F:EOSDigital.API.TvValues.Auto">
            <summary>
            The Tv <see cref="T:EOSDigital.API.CameraValue"/> of the "Auto" setting
            </summary>
        </member>
        <member name="F:EOSDigital.API.TvValues.Bulb">
            <summary>
            The Tv <see cref="T:EOSDigital.API.CameraValue"/> of the "Bulb" setting
            </summary>
        </member>
        <member name="F:EOSDigital.API.TvValues.Invalid">
            <summary>
            The Tv <see cref="T:EOSDigital.API.CameraValue"/> of an invalid setting
            </summary>
        </member>
        <member name="M:EOSDigital.API.TvValues.GetValue(System.Int32)">
            <summary>
            Get the value from an int.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of the value to get</param>
            <returns>The CameraValue with given int representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.TvValues.GetValue(System.String)">
            <summary>
            Get the value from a string.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of value to get</param>
            <returns>The CameraValue with given string representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.TvValues.GetValue(System.Double)">
            <summary>
            Get the value from a double.
            It searches for the closest representation and therefore might not return the exact input value.
            </summary>
            <param name="value">The value to get</param>
            <returns>The CameraValue with given double representation</returns>
        </member>
        <member name="T:EOSDigital.API.ISOValues">
            <summary>
            Stores ISO Values and provides methods to get those values
            </summary>
        </member>
        <member name="P:EOSDigital.API.ISOValues.Values">
            <summary>
            All values for this property
            </summary>
        </member>
        <member name="F:EOSDigital.API.ISOValues.Auto">
            <summary>
            The ISO <see cref="T:EOSDigital.API.CameraValue"/> of the "Auto" setting
            </summary>
        </member>
        <member name="F:EOSDigital.API.ISOValues.Invalid">
            <summary>
            The ISO <see cref="T:EOSDigital.API.CameraValue"/> of an invalid setting
            </summary>
        </member>
        <member name="M:EOSDigital.API.ISOValues.GetValue(System.Int32)">
            <summary>
            Get the value from an int.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of the value to get</param>
            <returns>The CameraValue with given int representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.ISOValues.GetValue(System.String)">
            <summary>
            Get the value from a string.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of value to get</param>
            <returns>The CameraValue with given string representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.ISOValues.GetValue(System.Double)">
            <summary>
            Get the value from a double.
            It searches for the closest representation and therefore might not return the exact input value.
            </summary>
            <param name="value">The value to get</param>
            <returns>The CameraValue with given double representation</returns>
        </member>
        <member name="T:EOSDigital.API.ExpCompValues">
            <summary>
            Stores Exposure Compensation Values and provides methods to get those values
            </summary>
        </member>
        <member name="P:EOSDigital.API.ExpCompValues.Values">
            <summary>
            All values for this property
            </summary>
        </member>
        <member name="F:EOSDigital.API.ExpCompValues.Zero">
            <summary>
            The ExposureCompensation <see cref="T:EOSDigital.API.CameraValue"/> of Zero
            </summary>
        </member>
        <member name="F:EOSDigital.API.ExpCompValues.Invalid">
            <summary>
            The ExposureCompensation <see cref="T:EOSDigital.API.CameraValue"/> of an invalid setting
            </summary>
        </member>
        <member name="M:EOSDigital.API.ExpCompValues.GetValue(System.Int32)">
            <summary>
            Get the value from an int.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of the value to get</param>
            <returns>The CameraValue with given int representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.ExpCompValues.GetValue(System.String)">
            <summary>
            Get the value from a string.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of value to get</param>
            <returns>The CameraValue with given string representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.ExpCompValues.GetValue(System.Double)">
            <summary>
            Get the value from a double.
            It searches for the closest representation and therefore might not return the exact input value.
            </summary>
            <param name="value">The value to get</param>
            <returns>The CameraValue with given double representation</returns>
        </member>
        <member name="T:EOSDigital.API.AEModeValues">
            <summary>
            Stores AE Mode Values and provides methods to get those values
            </summary>
        </member>
        <member name="P:EOSDigital.API.AEModeValues.Values">
            <summary>
            All values for this property
            </summary>
        </member>
        <member name="M:EOSDigital.API.AEModeValues.GetValue(System.Int32)">
            <summary>
            Get the value from an int.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of the value to get</param>
            <returns>The CameraValue with given int representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.AEModeValues.GetValue(System.String)">
            <summary>
            Get the value from a string.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of value to get</param>
            <returns>The CameraValue with given string representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.AEModeValues.GetValue(System.Double)">
            <summary>
            Get the value from a double.
            It searches for the closest representation and therefore might not return the exact input value.
            </summary>
            <param name="value">The value to get</param>
            <returns>The CameraValue with given double representation</returns>
        </member>
        <member name="T:EOSDigital.API.MeteringModeValues">
            <summary>
            Stores Metering Mode Values and provides methods to get those values
            </summary>
        </member>
        <member name="P:EOSDigital.API.MeteringModeValues.Values">
            <summary>
            All values for this property
            </summary>
        </member>
        <member name="M:EOSDigital.API.MeteringModeValues.GetValue(System.Int32)">
            <summary>
            Get the value from an int.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of the value to get</param>
            <returns>The CameraValue with given int representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.MeteringModeValues.GetValue(System.String)">
            <summary>
            Get the value from a string.
            It has to be an exact match, otherwise an exception is thrown.
            </summary>
            <param name="value">The ID of value to get</param>
            <returns>The CameraValue with given string representation</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No <see cref="T:EOSDigital.API.CameraValue"/> for the given value</exception>
        </member>
        <member name="M:EOSDigital.API.MeteringModeValues.GetValue(System.Double)">
            <summary>
            Get the value from a double.
            It searches for the closest representation and therefore might not return the exact input value.
            </summary>
            <param name="value">The value to get</param>
            <returns>The CameraValue with given double representation</returns>
        </member>
        <member name="T:EOSDigital.SDK.SDKProgressCallback">
            <summary>
            A delegate for progress.
            </summary>
            <param name="inPercent">The progress. A value between 0 and 100</param>
            <param name="inContext">Reference to the object the progress is about</param>
            <param name="outCancel">Pass true to cancel the underlying process</param>
            <returns></returns>
        </member>
        <member name="T:EOSDigital.SDK.SDKPropertyEventHandler">
            <summary>
            A delegate for property events.
            </summary>
            <param name="inEvent">The property event ID</param>
            <param name="inPropertyID">The property ID</param>
            <param name="inParameter">A parameter for additional information</param>
            <param name="inContext">A reference to the object that has sent the event</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="T:EOSDigital.SDK.SDKObjectEventHandler">
            <summary>
            A delegate for object events.
            </summary>
            <param name="inEvent">The object event ID</param>
            <param name="inRef">A pointer to the object that has changed</param>
            <param name="inContext">A reference to the object that has sent the event</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="T:EOSDigital.SDK.SDKStateEventHandler">
            <summary>
            A delegate for state events.
            </summary>
            <param name="inEvent">The state event ID</param>
            <param name="inParameter">A parameter for additional information</param>
            <param name="inContext">A reference to the object that has sent the event</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="T:EOSDigital.SDK.SDKCameraAddedHandler">
            <summary>
            A delegate to inform of an added camera.
            </summary>
            <param name="inContext">A reference to the added camera</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="T:EOSDigital.SDK.ErrorCode">
            <summary>
            Error Codes
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ErrorCode.OK">
            <summary>
            ED-SDK Function Success Code
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.DataType">
            <summary>
            SDK Data Types
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.PropertyID">
            <summary>
            Property IDs
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.MyMenuID">
            <summary>
            MyMenu IDs
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.CameraCommand">
            <summary>
            Camera Commands
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ShutterButton">
            <summary>
            Shutter Button State
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.CameraStatusCommand">
            <summary>
            Camera Status
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.PropertyEventID">
            <summary>
            Property Event IDs
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PropertyEventID.All">
            <summary>
            Notifies all property events.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PropertyEventID.PropertyChanged">
            <summary>
            Notifies that a camera property value has been changed. 
            The changed property can be retrieved from event data. 
            The changed value can be retrieved by means of EdsGetPropertyData. 
            In the case of type 1 protocol standard cameras, 
            notification of changed properties can only be issued for custom functions (CFn). 
            If the property type is 0x0000FFFF, the changed property cannot be identified. 
            Thus, retrieve all required properties repeatedly.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PropertyEventID.PropertyDescChanged">
            <summary>
            Notifies of changes in the list of camera properties with configurable values. 
            The list of configurable values for property IDs indicated in event data 
            can be retrieved by means of EdsGetPropertyDesc. 
            For type 1 protocol standard cameras, the property ID is identified as "Unknown"
            during notification. 
            Thus, you must retrieve a list of configurable values for all properties and
            retrieve the property values repeatedly. 
            (For details on properties for which you can retrieve a list of configurable
            properties, see the description of EdsGetPropertyDesc). 
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ObjectEventID">
            <summary>
            Object Event IDs
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.All">
            <summary>
            Notifies all object events.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.VolumeInfoChanged">
            <summary>
            Notifies that the volume object (memory card) state (VolumeInfo)
            has been changed. 
            Changed objects are indicated by event data. 
            The changed value can be retrieved by means of EdsGetVolumeInfo. 
            Notification of this event is not issued for type 1 protocol standard cameras.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.VolumeUpdateItems">
            <summary>
            Notifies if the designated volume on a camera has been formatted.
            If notification of this event is received, get sub-items of the designated
            volume again as needed. 
            Changed volume objects can be retrieved from event data. 
            Objects cannot be identified on cameras earlier than the D30
            if files are added or deleted. 
            Thus, these events are subject to notification.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.FolderUpdateItems">
            <summary>
            Notifies if many images are deleted in a designated folder on a camera.
            If notification of this event is received, get sub-items of the designated
            folder again as needed. 
            Changed folders (specifically, directory item objects) can be retrieved
            from event data.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.DirItemCreated">
            <summary>
            Notifies of the creation of objects such as new folders or files
            on a camera compact flash card or the like. 
            This event is generated if the camera has been set to store captured
            images simultaneously on the camera and a computer,
            for example, but not if the camera is set to store images
            on the computer alone. 
            Newly created objects are indicated by event data. 
            Because objects are not indicated for type 1 protocol standard cameras,
            (that is, objects are indicated as NULL),
            you must again retrieve child objects under the camera object to 
            identify the new objects.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.DirItemRemoved">
            <summary>
            Notifies of the deletion of objects such as folders or files on a camera
            compact flash card or the like. 
            Deleted objects are indicated in event data. 
            Because objects are not indicated for type 1 protocol standard cameras, 
            you must again retrieve child objects under the camera object to
            identify deleted objects.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.DirItemInfoChanged">
            <summary>
            Notifies that information of DirItem objects has been changed. 
            Changed objects are indicated by event data. 
            The changed value can be retrieved by means of EdsGetDirectoryItemInfo. 
            Notification of this event is not issued for type 1 protocol standard cameras.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.DirItemContentChanged">
            <summary>
            Notifies that header information has been updated, as for rotation information
            of image files on the camera. 
            If this event is received, get the file header information again, as needed. 
            This function is for type 2 protocol standard cameras only.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.DirItemRequestTransfer">
            <summary>
            Notifies that there are objects on a camera to be transferred to a computer. 
            This event is generated after remote release from a computer or local release
            from a camera. 
            If this event is received, objects indicated in the event data must be downloaded.
            Furthermore, if the application does not require the objects, instead
            of downloading them,
            execute EdsDownloadCancel and release resources held by the camera. 
            The order of downloading from type 1 protocol standard cameras must be the order
            in which the events are received.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.DirItemRequestTransferDT">
            <summary>
            Notifies if the camera's direct transfer button is pressed. 
            If this event is received, objects indicated in the event data must be downloaded. 
            Furthermore, if the application does not require the objects, instead of
            downloading them, 
            execute EdsDownloadCancel and release resources held by the camera. 
            Notification of this event is not issued for type 1 protocol standard cameras.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ObjectEventID.DirItemCancelTransferDT">
            <summary>
            Notifies of requests from a camera to cancel object transfer 
            if the button to cancel direct transfer is pressed on the camera. 
            If the parameter is 0, it means that cancellation of transfer is requested for
            objects still not downloaded,
            with these objects indicated by kEdsObjectEvent_DirItemRequestTransferDT. 
            Notification of this event is not issued for type 1 protocol standard cameras.
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.StateEventID">
            <summary>
            State Event IDs
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.All">
            <summary>
            Notifies all state events.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.Shutdown">
            <summary>
            Indicates that a camera is no longer connected to a computer, 
            whether it was disconnected by unplugging a cord, opening
            the compact flash compartment, 
            turning the camera off, auto shut-off, or by other means.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.JobStatusChanged">
            <summary>
            Notifies of whether or not there are objects waiting to
            be transferred to a host computer. 
            This is useful when ensuring all shot images have been transferred 
            when the application is closed. 
            Notification of this event is not issued for type 1 protocol 
            standard cameras.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.WillSoonShutDown">
            <summary>
            Notifies that the camera will shut down after a specific period. 
            Generated only if auto shut-off is set. 
            Exactly when notification is issued (that is, the number of
            seconds until shutdown) varies depending on the camera model. 
            To continue operation without having the camera shut down,
            use EdsSendCommand to extend the auto shut-off timer.
            The time in seconds until the camera shuts down is returned
            as the initial value.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.ShutDownTimerUpdate">
            <summary>
            As the counterpart event to kEdsStateEvent_WillSoonShutDown,
            this event notifies of updates to the number of seconds until
            a camera shuts down. 
            After the update, the period until shutdown is model-dependent.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.CaptureError">
            <summary>
            Notifies that a requested release has failed, due to focus
            failure or similar factors.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.InternalError">
            <summary>
            Notifies of internal SDK errors. 
            If this error event is received, the issuing device will probably
            not be able to continue working properly,
            so cancel the remote connection.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.AfResult">
            <summary>
            The autofocus is done working.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.StateEventID.BulbExposureTime">
            <summary>
            The bulb exposure time has changed.
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.DriveLens">
            <summary>
            Drive Lens
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.SeekOrigin">
            <summary>
            Seek Origin
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.FileAccess">
            <summary>
            File Access
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.FileCreateDisposition">
            <summary>
            File-creation Disposition
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FileCreateDisposition.CreateNew">
            <summary>
            Creates a new file. An error occurs if the designated file already exists
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FileCreateDisposition.CreateAlways">
            <summary>
            Creates a new file. If the designated file already
            exists, that file is overwritten and existing attributes
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FileCreateDisposition.OpenExisting">
            <summary>
            Opens a file. An error occurs if the designated file does not exist.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FileCreateDisposition.OpenAlways">
            <summary>
            If the file exists, it is opened. If the designated file
            does not exist, a new file is created.
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FileCreateDisposition.TruncateExisting">
            <summary>
            Opens a file and sets the file size to 0 bytes.
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ImageType">
            <summary>
            Image Type
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ImageSize">
            <summary>
            Image Size
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.CompressQuality">
            <summary>
            Compression Quality
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ImageQuality">
            <summary>
            Image Quality
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.LargeJpeg">
            <summary>
            Jpeg Large
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.Middle1Jpeg">
            <summary>
            Jpeg Middle1
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.Middle2Jpeg">
            <summary>
            Jpeg Middle2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SmallJpeg">
            <summary>
            Jpeg Small
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.Small2Jpeg">
            <summary>
            Jpeg Small2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.Small3Jpeg">
            <summary>
            Jpeg Small3
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.LargeJpegFine">
            <summary>
            Jpeg Large Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.LargeJpegNormal">
            <summary>
            Jpeg Large Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MiddleJpegFine">
            <summary>
            Jpeg Middle Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MiddleJpegNormal">
            <summary>
            Jpeg Middle Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SmallJpegFine">
            <summary>
            Jpeg Small Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SmallJpegNormal">
            <summary>
            Jpeg Small Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.Small1JpegFine">
            <summary>
            Jpeg Small1 Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.Small1JpegNormal">
            <summary>
            Jpeg Small1 Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW">
            <summary>
            RAW
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_LargeJpegFine">
            <summary>
            RAW + Jpeg Large Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_LargeJpegNormal">
            <summary>
            RAW + Jpeg Large Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_MiddleJpegFine">
            <summary>
            RAW + Jpeg Middle Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_MiddleJpegNormal">
            <summary>
            RAW + Jpeg Middle Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_SmallJpegFine">
            <summary>
            RAW + Jpeg Small Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_SmallJpegNormal">
            <summary>
            RAW + Jpeg Small Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_Small1JpegFine">
            <summary>
            RAW + Jpeg Small1 Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_Small1JpegNormal">
            <summary>
            RAW + Jpeg Small1 Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_Small2Jpeg">
            <summary>
            RAW + Jpeg Small2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_Small3Jpeg">
            <summary>
            RAW + Jpeg Small3
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_LargeJpeg">
            <summary>
            RAW + Jpeg Large
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_Middle1Jpeg">
            <summary>
            RAW + Jpeg Middle1
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_Middle2Jpeg">
            <summary>
            RAW + Jpeg Middle2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.RAW_SmallJpeg">
            <summary>
            RAW + Jpeg Small
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW">
            <summary>
            MRAW(SRAW1)
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_LargeJpegFine">
            <summary>
            MRAW(SRAW1) + Jpeg Large Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_LargeJpegNormal">
            <summary>
            MRAW(SRAW1) + Jpeg Large Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_MiddleJpegFine">
            <summary>
            MRAW(SRAW1) + Jpeg Middle Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_MiddleJpegNormal">
            <summary>
            MRAW(SRAW1) + Jpeg Middle Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_SmallJpegFine">
            <summary>
            MRAW(SRAW1) + Jpeg Small Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_SmallJpegNormal">
            <summary>
            MRAW(SRAW1) + Jpeg Small Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_Small1JpegFine">
            <summary>
            MRAW(SRAW1) + Jpeg Small1 Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_Small1JpegNormal">
            <summary>
            MRAW(SRAW1) + Jpeg Small1 Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_Small2Jpeg">
            <summary>
            MRAW(SRAW1) + Jpeg Small2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_Small3Jpeg">
            <summary>
            MRAW(SRAW1) + Jpeg Small3
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_LargeJpeg">
            <summary>
            MRAW(SRAW1) + Jpeg Large
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_Middle1Jpeg">
            <summary>
            MRAW(SRAW1) + Jpeg Middle1
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_Middle2Jpeg">
            <summary>
            MRAW(SRAW1) + Jpeg Middle2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.MRAW_SmallJpeg">
            <summary>
            MRAW(SRAW1) + Jpeg Small
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW">
            <summary>
            SRAW(SRAW2)
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_LargeJpegFine">
            <summary>
            SRAW(SRAW2) + Jpeg Large Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_LargeJpegNormal">
            <summary>
            SRAW(SRAW2) + Jpeg Large Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_MiddleJpegFine">
            <summary>
            SRAW(SRAW2) + Jpeg Middle Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_MiddleJpegNormal">
            <summary>
            SRAW(SRAW2) + Jpeg Middle Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_SmallJpegFine">
            <summary>
            SRAW(SRAW2) + Jpeg Small Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_SmallJpegNormal">
            <summary>
            SRAW(SRAW2) + Jpeg Small Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_Small1JpegFine">
            <summary>
            SRAW(SRAW2) + Jpeg Small1 Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_Small1JpegNormal">
            <summary>
            SRAW(SRAW2) + Jpeg Small1 Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_Small2Jpeg">
            <summary>
            SRAW(SRAW2) + Jpeg Small2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_Small3Jpeg">
            <summary>
            SRAW(SRAW2) + Jpeg Small3
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_LargeJpeg">
            <summary>
            SRAW(SRAW2) + Jpeg Large
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_Middle1Jpeg">
            <summary>
            SRAW(SRAW2) + Jpeg Middle1
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_Middle2Jpeg">
            <summary>
            SRAW(SRAW2) + Jpeg Middle2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQuality.SRAW_SmallJpeg">
            <summary>
            SRAW(SRAW2) + Jpeg Small
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ImageQualityLegacy">
            <summary>
            Image Quality for Legacy Cameras
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LJ">
            <summary>
            Jpeg Large
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.M1J">
            <summary>
            Jpeg Middle1
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.M2J">
            <summary>
            Jpeg Middle2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.SJ">
            <summary>
            Jpeg Small
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LJF">
            <summary>
            Jpeg Large Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LJN">
            <summary>
            Jpeg Large Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.MJF">
            <summary>
            Jpeg Middle Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.MJN">
            <summary>
            Jpeg Middle Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.SJF">
            <summary>
            Jpeg Small Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.SJN">
            <summary>
            Jpeg Small Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LR">
            <summary>
             RAW
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LRLJF">
            <summary>
            RAW + Jpeg Large Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LRLJN">
            <summary>
            RAW + Jpeg Large Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LRMJF">
            <summary>
            RAW + Jpeg Middle Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LRMJN">
            <summary>
            RAW + Jpeg Middle Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LRSJF">
            <summary>
            RAW + Jpeg Small Fine
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LRSJN">
            <summary>
            RAW + Jpeg Small Normal
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LR2">
            <summary>
            RAW
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LR2LJ">
            <summary>
            RAW + Jpeg Large
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LR2M1J">
            <summary>
            RAW + Jpeg Middle1
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LR2M2J">
            <summary>
            RAW + Jpeg Middle2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageQualityLegacy.LR2SJ">
            <summary>
            RAW + Jpeg Small
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ImageSource">
            <summary>
            Image Source
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.TargetImageType">
            <summary>
            Target Image Type
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ProgressOption">
            <summary>
            Progress Option
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.FileAttribute">
            <summary>
            File Attribute
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.BatteryQuality">
            <summary>
            Battery Level
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.SaveTo">
            <summary>
            Save to Device
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.StorageType">
            <summary>
            Storage Type
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.WhiteBalance">
            <summary>
            Whitebalance
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.PhotoEffect">
            <summary>
            Photo Effect
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ColorMatrix">
            <summary>
            Color Matrix
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.FilterEffect">
            <summary>
            Filter Effect
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ToningEffect">
            <summary>
            Toning Effect
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ColorSpace">
            <summary>
            Color Space
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.PictureStyle">
            <summary>
            Picture Style
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.TransferOption">
            <summary>
            Transfer Option
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.BracketMode">
            <summary>
            Bracketing Mode
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.EvfOutputDevice">
            <summary>
            Liveview Output Device
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.EvfZoom">
            <summary>
            Liveview Zoom Level
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.EvfAFMode">
            <summary>
            Liveview Autofocus Mode
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.FlashType">
            <summary>
            Flash Type
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ETTL2Mode">
            <summary>
            Flash ETTL 2 Mode
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ProcessingParameter">
            <summary>
            Processing parameter of a camera
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ImageOrientation">
            <summary>
            The orientation of an image
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageOrientation.ULRD">
            <summary>
            The 0th row is at the visual top of the image, and the 0th column is on the visual left-hand side
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageOrientation.DRLU">
            <summary>
            The 0th row is at the visual bottom of the image, and the 0th column is on the visual right-hand side
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageOrientation.LDUR">
            <summary>
            The 0th row is on the visual right-hand side of the image, and the 0th column is at the visual top
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageOrientation.RUDL">
            <summary>
            The 0th row is on the visual left-hand side of the image, and the 0th column is at the visual bottom
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ToneCurve">
            <summary>
            Tone curve
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.DriveMode">
            <summary>
            Drive mode of a camera
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.AFMode">
            <summary>
            Autofocus mode of a camera
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.NoiseReduction">
            <summary>
            Noise reduction method
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.RedEye">
            <summary>
            State of red eye reduction
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.SynchroTiming">
            <summary>
            Flash synchronization of curtain
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.HistogramStatus">
            <summary>
            Mode of histogram
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.Recording">
            <summary>
            Video recording methods
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.SaveImageType">
            <summary>
            Image type to save after RAW processing
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.DeviceSubType">
            <summary>
            Camera sub-type
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.CanonSDK">
            <summary>
            This class contains all of the native Canon SDK calls and some wrapper methods
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.CanonSDK.MAX_NAME">
            <summary>
            Maximum length of string
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.CanonSDK.TRANSFER_BLOCK_SIZE">
            <summary>
            Block size of a data transfer
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.CanonSDK.DllPath">
            <summary>
            The path to the Canon SDK DLL
            </summary>
        </member>
        <member name="P:EOSDigital.SDK.CanonSDK.SDKVersion">
            <summary>
            Version of the currently used Canon SDK DLL
            </summary>
        </member>
        <member name="P:EOSDigital.SDK.CanonSDK.IsVerGE34">
            <summary>
            States if the used SDK version is >=3.4
            Call <see cref="M:EOSDigital.SDK.CanonSDK.InitializeVersion"/> to initialize this property.
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.InitializeVersion">
            <summary>
            Checks which SDK version is currently used and sets IsVer* properties
            </summary>
            <exception cref="T:System.InvalidOperationException">Could not extract version information</exception>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetSDKVersion">
            <summary>
            Get SDK version on Windows
            </summary>
            <returns>The SDK version or null if not found</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsInitializeSDK">
            <summary>
            Initializes the libraries.
            This must be called before using the EDSDK API
            </summary>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsTerminateSDK">
            <summary>
            Terminates the use of the libraries.
            This must be called when ending the SDK, it releases all resources used by the libraries.
            </summary>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsOpenSession(System.IntPtr)">
            <summary>
            Establishes a logical connection with a remote camera. Use this method after getting the camera object.
            </summary>
            <param name="inCameraRef">The reference of the camera.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCloseSession(System.IntPtr)">
            <summary>
            Closes a logical connection with a remote camera.
            </summary>
            <param name="inCameraRef">The reference of the camera.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetPropertySize(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.DataType@,System.Int32@)">
            <summary>
            Gets the byte size and data type of a designated property from a camera object or image object.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outDataType">Pointer to the buffer that is to receive the property type data.</param>
            <param name="outSize">Pointer to the buffer that is to receive the property size.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="inPropertySize">The number of bytes of the prepared buffer for receive property-value.</param>
            <param name="outPropertyData">The buffer pointer to receive property-value.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Int32,System.Object)">
            <summary>
            Sets property data for the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID</param>
            <param name="inParam">Additional information of property.</param>
            <param name="inPropertySize">The number of bytes of the prepared buffer for set property-value.</param>
            <param name="inPropertyData">The buffer pointer to set property-value.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetPropertyDesc(System.IntPtr,EOSDigital.SDK.PropertyID,EOSDigital.SDK.PropertyDesc@)">
            <summary>
            Gets a list of property data that can be set for the object designated in inRef,
            as well as maximum and minimum values. This method is only intended for some shooting-related properties
            </summary>
            <param name="inRef">The reference of the camera.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="outPropertyDesc">Array of the values which can be set up.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSendCommand(System.IntPtr,EOSDigital.SDK.CameraCommand,System.Int32)">
            <summary>
            Sends a command such as "Shoot" to a remote camera.
            </summary>
            <param name="inCameraRef">The reference of the camera which will receive the command.</param>
            <param name="inCommand">Specifies the command to be sent</param>
            <param name="inParam">Specifies additional command-specific information.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSendStatusCommand(System.IntPtr,EOSDigital.SDK.CameraStatusCommand,System.Int32)">
            <summary>
            Sets the remote camera state or mode.
            </summary>
            <param name="inCameraRef">The reference of the camera which will receive the command.</param>
            <param name="inCameraState">Specifies the command to be sent.</param>
            <param name="inParam">Specifies additional command-specific information.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetCapacity(System.IntPtr,EOSDigital.SDK.Capacity)">
            <summary>
            Sets the remaining HDD capacity on the host computer (excluding the portion from image transfer), as calculated by subtracting the portion from the previous time. 
            Set a reset flag initially and designate the cluster length and number of free clusters.
            Some type 2 protocol standard cameras can display the number of shots left on the camera based on the available disk capacity of the host computer. 
            For these cameras, after the storage destination is set to the computer, use this method to notify the camera of the available disk capacity of the host computer.
            </summary>
            <param name="inCameraRef">The reference of the camera which will receive the command.</param>
            <param name="inCapacity">The remaining capacity of a transmission place.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetVolumeInfo(System.IntPtr,EOSDigital.SDK.VolumeInfo@)">
            <summary>
            Gets volume information for a memory card in the camera
            </summary>
            <param name="inCameraRef">Information of the volume</param>
            <param name="outVolumeInfo"></param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsFormatVolume(System.IntPtr)">
            <summary>
            Formats a volume.
            </summary>
            <param name="inVolumeRef">The reference of the volume.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetDirectoryItemInfo(System.IntPtr,EOSDigital.SDK.DirectoryItemInfo@)">
            <summary>
            Gets information about the directory or file object on the memory card (volume) in a remote camera.
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="outDirItemInfo">Information of the directory item.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsDeleteDirectoryItem(System.IntPtr)">
            <summary>
            Deletes a camera folder or file.
            If folders with subdirectories are designated, all files are deleted except protected files.
            DirectoryItem objects deleted by means of this method are implicitly released.
            Thus, there is no need to release them by means of Release.
            </summary>
            <param name="inDirItemRef"></param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetAttribute(System.IntPtr,EOSDigital.SDK.FileAttribute@)">
            <summary>
            Gets attributes of files of a camera.
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="outFileAttribute">
            Indicates the file attributes.
            As for the file attributes, OR values of the value defined by enum FileAttributes can be retrieved.
            Thus, when determining the file attributes, it must be checked if an attribute flag is set for target attributes.
            </param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetAttribute(System.IntPtr,EOSDigital.SDK.FileAttribute)">
            <summary>
            Changes attributes of files on a camera.
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="inFileAttribute">
            Indicates the file attributes.
            As for the file attributes, OR values of the value defined by enum FileAttributes can be retrieved.
            </param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsDownload(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Downloads a file on a remote camera (in the camera memory or on a memory card) to the host computer.
            The downloaded file is sent directly to a file stream created in advance.
            When dividing the file being retrieved, call this method repeatedly.
            Also in this case, make the data block size a multiple of 512 (bytes), excluding the final block.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="inReadSize">-</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsDownload(System.IntPtr,System.Int64,System.IntPtr)">
            <summary>
            Downloads a file on a remote camera (in the camera memory or on a memory card) to the host computer.
            The downloaded file is sent directly to a file stream created in advance.
            When dividing the file being retrieved, call this method repeatedly.
            Also in this case, make the data block size a multiple of 512 (bytes), excluding the final block.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="inReadSize">-</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsDownloadCancel(System.IntPtr)">
            <summary>
            Must be executed when downloading of a directory item is canceled.
            Calling this method makes the camera cancel file transmission.
            It also releases resources.
            This operation need not be executed when using DownloadThumbnail.
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsDownloadComplete(System.IntPtr)">
            <summary>
            Must be called when downloading of directory items is complete.
            Executing this method makes the camera recognize that file transmission is complete.
            This operation need not be executed when using DownloadThumbnail.
            </summary>
            <param name="inDirItemRef"></param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsDownloadThumbnail(System.IntPtr,System.IntPtr)">
            <summary>
            Extracts and downloads thumbnail information from image files in a camera.
            Thumbnail information in the camera's image files is downloaded to the host computer.
            Downloaded thumbnails are sent directly to a file stream created in advance.
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateFileStream(System.String,EOSDigital.SDK.FileCreateDisposition,EOSDigital.SDK.FileAccess,System.IntPtr@)">
            <summary>
            Creates a new file on a host computer (or opens an existing file) and creates a file stream for access to the file. 
            If a new file is designated before executing this method, the file is actually created following the timing of writing by means of Write or the like with respect to an open stream.
            </summary>
            <param name="inFileName">Pointer to a null-terminated string that specifies the file name.</param>
            <param name="inCreateDisposition">Action to take on files that exist, and which action to take hen files do not exist.</param>
            <param name="inDesiredAccess">Access to the stream (reading, writing, or both).</param>
            <param name="outStream">The reference of the stream</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateMemoryStream(System.Int32,System.IntPtr@)">
            <summary>
            Creates a stream in the memory of a host computer.
            In the case if writing in excess of the allocated buffer size, the memory is automatically extended.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inBufferSize">The number of bytes of the memory to allocate.</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateMemoryStream(System.Int64,System.IntPtr@)">
            <summary>
            Creates a stream in the memory of a host computer.
            In the case if writing in excess of the allocated buffer size, the memory is automatically extended.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inBufferSize">The number of bytes of the memory to allocate.</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateFileStreamEx(System.String,EOSDigital.SDK.FileCreateDisposition,EOSDigital.SDK.FileAccess,System.IntPtr@)">
            <summary>
            An extended version of CreateStreamFromFile.
            Use this method when working with Unicode file names.
            </summary>
            <param name="inFileName">Designate the file name.</param>
            <param name="inCreateDisposition">Action to take on files take when files do not exist.</param>
            <param name="inDesiredAccess">Access to the stream (reading, writing, or both)</param>
            <param name="outStream">The reference of the stream</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateMemoryStreamFromPointer(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            Creates a stream from the memory buffer you prepared.
            Unlike the buffer size of streams created by means of CreateMemoryStream, the buffer size you prepare
            for streams created this way does not expand.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inUserBuffer">-</param>
            <param name="inBufferSize">The number of bytes of the memory to allocate.</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateMemoryStreamFromPointer(System.IntPtr,System.Int64,System.IntPtr@)">
            <summary>
            Creates a stream from the memory buffer you prepared.
            Unlike the buffer size of streams created by means of CreateMemoryStream, the buffer size you prepare
            for streams created this way does not expand.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inUserBuffer">-</param>
            <param name="inBufferSize">The number of bytes of the memory to allocate.</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateMemoryStreamFromPointer(System.Byte[],System.Int32,System.IntPtr@)">
            <summary>
            Creates a stream from the memory buffer you prepared.
            Unlike the buffer size of streams created by means of CreateMemoryStream, the buffer size you prepare for streams created this way does not expand.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inUserBuffer">-</param>
            <param name="inBufferSize">The number of bytes of the memory to allocate.</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateMemoryStreamFromPointer(System.Byte[],System.Int64,System.IntPtr@)">
            <summary>
            Creates a stream from the memory buffer you prepared.
            Unlike the buffer size of streams created by means of CreateMemoryStream, the buffer size you prepare for streams created this way does not expand.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inUserBuffer">-</param>
            <param name="inBufferSize">The number of bytes of the memory to allocate.</param>
            <param name="outStream">The reference of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateStream(System.IntPtr,System.IntPtr)">
            <summary>
            Creates a stream from an existing stream.
            </summary>
            <param name="inStream">The reference of the input stream.</param>
            <param name="outStreamRef">The reference of the output stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetPointer(System.IntPtr,System.IntPtr@)">
            <summary>
            Gets the pointer to the start address of memory managed by the memory stream. 
            As the EDSDK automatically resizes the buffer, the memory stream provides you with the same access methods as for the file stream. 
            If access is attempted that is excessive with regard to the buffer size for the stream, data before the required buffer size is allocated is copied internally, and new writing occurs. 
            Thus, the buffer pointer might be switched on an unknown timing. Caution in use is therefore advised.
            </summary>
            <param name="inStreamRef">Designate the memory stream for the pointer to retrieve.</param>
            <param name="outPointer">If successful, returns the pointer to the buffer written in the memory stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsRead(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
            <summary>
            Reads data the size of inReadSize into the outBuffer buffer, starting at the current read or write position of the stream.
            The size if data actually read can be designated in outReadSize.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inReadSize">The number of bytes to read.</param>
            <param name="outBuffer">Pointer to the user-supplied buffer that is to receive the data read from the stream.</param>
            <param name="outReadSize">The actually read number of bytes.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsRead(System.IntPtr,System.Int64,System.IntPtr,System.Int64@)">
            <summary>
            Reads data the size of inReadSize into the outBuffer buffer, starting at the current read or write position of the stream.
            The size if data actually read can be designated in outReadSize.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inReadSize">The number of bytes to read.</param>
            <param name="outBuffer">Pointer to the user-supplied buffer that is to receive the data read from the stream.</param>
            <param name="outReadSize">The actually read number of bytes.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsWrite(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
            <summary>
            Writes data of a designated buffer to the current read or write position of the stream.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inWriteSize">The number of bytes to write.</param>
            <param name="inBuffer">A pointer to the user-supplied buffer that contains the data to be written (in number of bytes)</param>
            <param name="outWrittenSize"></param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsWrite(System.IntPtr,System.Int64,System.IntPtr,System.Int64@)">
            <summary>
            Writes data of a designated buffer to the current read or write position of the stream.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inWriteSize">The number of bytes to write.</param>
            <param name="inBuffer">A pointer to the user-supplied buffer that contains the data to be written (in number of bytes)</param>
            <param name="outWrittenSize"></param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSeek(System.IntPtr,System.Int32,EOSDigital.SDK.SeekOrigin)">
            <summary>
            Moves the read or write position of the stream (that is, the file position indicator)
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inSeekOffset">Number of bytes to move the pointer.</param>
            <param name="inSeekOrigin">Pointer movement mode.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSeek(System.IntPtr,System.Int64,EOSDigital.SDK.SeekOrigin)">
            <summary>
            Moves the read or write position of the stream (that is, the file position indicator)
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inSeekOffset">Number of bytes to move the pointer.</param>
            <param name="inSeekOrigin">Pointer movement mode.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetPosition(System.IntPtr,System.Int32@)">
            <summary>
            Gets the current read or write position of the stream (that is, the file position indicator)
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="outPosition">The current stream pointer.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetPosition(System.IntPtr,System.Int64@)">
            <summary>
            Gets the current read or write position of the stream (that is, the file position indicator)
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="outPosition">The current stream pointer.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetLength(System.IntPtr,System.Int32@)">
            <summary>
            Gets the stream size.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="outLength">The length of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetLength(System.IntPtr,System.Int64@)">
            <summary>
            Gets the stream size.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="outLength">The length of the stream.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCopyData(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Copies data from the copy source stream to the copy destination stream.
            The read or write position of the data to copy is determined from the current file read or write position of the respective stream.
            After this method is executed, the read or write position of the copy source and copy destination streams are moved
            an amount corresponding to inWriteSize in the positive direction.
            <para>USE ONLY WITH SDK VERSION &lt;3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inWriteSize">The number of bytes to copy.</param>
            <param name="outStreamRef">The reference of the stream or image.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCopyData(System.IntPtr,System.Int64,System.IntPtr)">
            <summary>
            Copies data from the copy source stream to the copy destination stream.
            The read or write position of the data to copy is determined from the current file read or write position of the respective stream.
            After this method is executed, the read or write position of the copy source and copy destination streams are moved
            an amount corresponding to inWriteSize in the positive direction.
            <para>USE ONLY WITH SDK VERSION &gt;=3.4</para>
            </summary>
            <param name="inStreamRef">The reference of the stream or image.</param>
            <param name="inWriteSize">The number of bytes to copy.</param>
            <param name="outStreamRef">The reference of the stream or image.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateImageRef(System.IntPtr,System.IntPtr@)">
            <summary>
            Creates an image object from an image file.
            Without modification, stream objects cannot be worked with as images.
            Thus, when extracting images from image files, this method must be used to create image objects.
            The image object created this way can be used to get image information
            (such as height and width, number of components, and resolution), thumbnail image data, and the image data itself.
            </summary>
            <param name="inStreamRef">The reference of the stream.</param>
            <param name="outImageRef">The reference of the image.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetImageInfo(System.IntPtr,EOSDigital.SDK.ImageSource,EOSDigital.SDK.ImageInfo@)">
            <summary>
            Gets image information from a designated image object.
            Here, image information means the image width and height, number of color components, resolution, and effective image area.
            </summary>
            <param name="inImageRef">Designate the object which to get image information.</param>
            <param name="inImageSource">
            Of the various image data items in the image file, designate the type of image data representing the information you want to get.
            Designate the image as defined in the enum ImageSource.
            </param>
            <param name="outImageInfo">Stores the image information designated in inImageSource</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetImage(System.IntPtr,EOSDigital.SDK.ImageSource,EOSDigital.SDK.TargetImageType,EOSDigital.SDK.Rectangle,EOSDigital.SDK.Size,System.IntPtr)">
            <summary>
            Gets designated image data from an image file, in the form of a designated rectangle. 
            Returns uncompressed results for JPEGs and processed results in the designated pixel order (RGB, Top-down BGR, and so on) for RAW images. 
            Additionally, by designating the input/output rectangle, it is possible to get reduced, enlarged, or partial images. 
            However, because images corresponding to the designated output rectangle are always returned by the SDK, the SDK does not take the aspect ratio into account. 
            To maintain the aspect ratio, you must keep the aspect ratio in mind when designating the rectangle.
            </summary>
            <param name="inImageRef">Designate the image object for which to get the image data.</param>
            <param name="inImageSource">Designate the type of image data to get from the image file (thumbnail, preview, and so on). Designate values as defined in Enum ImageSource.</param>
            <param name="inImageType">
            Designate the output image type.
            Because the output format of EdGetImage may only be RGB, only kTargetImageType_RGB or kTargetImageType_RGB16 can be designated. 
            However, image types exceeding the resolution of inImageSource cannot be designated.
            </param>
            <param name="inSrcRect">Designate the coordinates and size of the rectangle to be retrieved (processed) from the source image. </param>
            <param name="inDstSize">Designate the rectangle size for output.</param>
            <param name="outStreamRef">Designate the memory or file stream for output of the image.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSaveImage(System.IntPtr,EOSDigital.SDK.SaveImageType,EOSDigital.SDK.SaveImageSetting,System.IntPtr)">
            <summary>
            Saves as a designated image type after RAW processing.
            When saving with JPEG compression, the JPEG quality setting applies with respect to OptionRef.
            </summary>
            <param name="inImageRef">Designate the image object for which to produce the file.</param>
            <param name="inImageType">Designate the image type to produce. Designate the following image types.</param>
            <param name="inSaveSetting">Designate saving options, such as JPEG image quality.</param>
            <param name="outStreamRef">Specifies the output file stream. The memory stream cannot be specified here.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCacheImage(System.IntPtr,System.Boolean)">
            <summary>
            Switches a setting on and off for creation of an image cache in the SDK for a designated image object during extraction (processing) of the image data.
            </summary>
            <param name="inImageRef">The reference of the image.</param>
            <param name="inUseCache">If cache image data or not. If set to false, the cached image data will be released.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsReflectImageProperty(System.IntPtr)">
            <summary>
            Incorporates image object property changes (effected by means of SetPropertyData) in the stream.
            </summary>
            <param name="inImageRef">The reference of the image.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetCameraAddedHandler(EOSDigital.SDK.SDKCameraAddedHandler,System.IntPtr)">
            <summary>
            Registers a callback function for when a camera is detected.
            </summary>
            <param name="inCameraAddedHandler">Pointer to a callback function called when a camera is connected physically.</param>
            <param name="inContext">Specifies an application-defined value to be sent to the callback function pointed to by CallBack parameter.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetPropertyEventHandler(System.IntPtr,EOSDigital.SDK.PropertyEventID,EOSDigital.SDK.SDKPropertyEventHandler,System.IntPtr)">
            <summary>
            Registers a callback function for receiving status change notification events for property-related camera evens.
            </summary>
            <param name="inCameraRef">Designate the camera object.</param>
            <param name="inEvent">Designate one or all events to be supplemented.</param>
            <param name="inPropertyEventHandler">Designate the pointer to the callback function for receiving property-related camera events.</param>
            <param name="inContext">Designate application information to be passed by mens of the callback funcion.Any data needed for your application can be passed.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetObjectEventHandler(System.IntPtr,EOSDigital.SDK.ObjectEventID,EOSDigital.SDK.SDKObjectEventHandler,System.IntPtr)">
            <summary>
            Registers a callback function for receiving status change notification events for objects on a remote camera.
            Here, object means columns representation memory cards, files and directories, and shot images stored in memory, in particular.
            </summary>
            <param name="inCameraRef">Designate the camera object.</param>
            <param name="inEvent">Designate one or all events to be supplemented.</param>
            <param name="inObjectEventHandler">Designate the pointer to the callback function for receiving object-related camera events.</param>
            <param name="inContext">Passes inContext without modification, as designated as an SetObjectEventHandler argument.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetCameraStateEventHandler(System.IntPtr,EOSDigital.SDK.StateEventID,EOSDigital.SDK.SDKStateEventHandler,System.IntPtr)">
            <summary>
            Registers a callback function for receiving status change notification events for property states on a camera.
            </summary>
            <param name="inCameraRef">Designate the camera object.</param>
            <param name="inEvent">Designate one or all events to be supplemented.</param>
            <param name="inStateEventHandler">Designate the pointer to the callback function for receiving events related to camera object states.</param>
            <param name="inContext">Designate application information to be passed by means of the callback function. Any data needed for the application can be passed.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsSetProgressCallback(System.IntPtr,EOSDigital.SDK.SDKProgressCallback,EOSDigital.SDK.ProgressOption,System.IntPtr)">
            <summary>
            Register a progress callback function. 
            An event is received as notification of progress during processing that takes a relatively long time, such as downloading files from a remote camera. 
            If you register the callback function, the EDSDK calls the callback function during execution or on completion of the following APIs. 
            This timing can be used in updating on-screen progress bars, for example.
            </summary>
            <param name="inRef">The reference of the stream or image.</param>
            <param name="inProgressFunc">Pointer to the progress callback function.</param>
            <param name="inProgressOption">The option about progress is specified.</param>
            <param name="inContext">
            Application information, passed in the argument when the callback function is called.
            Any information required for the program may be added.
            </param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetEvent">
            <summary>
            This function acquires an event. 
            In console application, please call this function regularly to acquire
            the event from a camera.
            </summary>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsCreateEvfImageRef(System.IntPtr,System.IntPtr@)">
            <summary>
            Creates an object used to get the live view image data set.
            </summary>
            <param name="inStreamRef">The stream reference which opened to get EVF JPEG image.</param>
            <param name="outEvfImageRef">The EVFData reference.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsDownloadEvfImage(System.IntPtr,System.IntPtr)">
            <summary>
            Downloads the live view image data set for a camera currently in live view mode.
            Live view can be started by using the property ID: PropertyID_Evf_OutputDevice and
            data:OutputDevice_PC to call SetPropertyData.
            In addition to image data, information such as zoom, focus position, and histogram data
            is included in the image data set. Image data is saved in a stream maintained by EvfImageRef.
            GetPropertyData can be used to get information such as the zoom, focus position, etc.
            Although the information of the zoom and focus position can be obtained from EvfImageRef,
            settings are applied to CameraRef.
            </summary>
            <param name="inCameraRef">The camera reference.</param>
            <param name="outEvfImageRef">The EVFData reference.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetCameraList(System.IntPtr@)">
            <summary>
            Gets camera list objects.
            </summary>
            <param name="outCameraListRef">Pointer to the camera-list.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetDeviceInfo(System.IntPtr,EOSDigital.SDK.DeviceInfo@)">
            <summary>
            Gets device information, such as the device name.
            Because device information of remote cameras is stored on the host computer, this method can be called before the session with the camera is opened.
            </summary>
            <param name="inCameraRef">The reference of the camera.</param>
            <param name="outDeviceInfo">Information as device of camera.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsRetain(System.IntPtr)">
            <summary>
            Increments the reference counter of existing objects.
            </summary>
            <param name="inRef">The reference for the item</param>
            <returns>The number of references for this pointer or 0xFFFFFFFF for an error</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsRelease(System.IntPtr)">
            <summary>
            Decrements the reference counter of an object.
            When the reference counter reaches 0, the object is release.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <returns>The number of references for this pointer or 0xFFFFFFFF for an error</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetChildCount(System.IntPtr,System.Int32@)">
            <summary>
            Gets the number of child objects of the designated object.
            Example: Number of files in a directory
            </summary>
            <param name="inRef">The reference of the list</param>
            <param name="outCount">Number of elements in this list.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetChildAtIndex(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            Gets an indexed child object of the designated object.
            </summary>
            <param name="inRef">The reference of the item</param>
            <param name="inIndex">The index that is passes in (zero based)</param>
            <param name="outRef">The pointer which receives reference of the specific index.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetParent(System.IntPtr,System.IntPtr@)">
            <summary>
            Gets the parent object of the designated object.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="outParentRef">The pointer which receives reference.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetDirectoryItemInfo(System.IntPtr,EOSDigital.SDK.DirectoryItemInfo@)">
            <summary>
            Gets information about the directory or file object on the memory card (volume) in a remote camera.
            This method works regardless of the used SDK version.
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="outDirItemInfo">Information of the directory item.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.EdsGetDirectoryItemInfo(System.IntPtr,EOSDigital.SDK.DirectoryItemInfo_3_4@)">
            <summary>
            Gets information about the directory or file object on the memory card (volume) in a remote camera.
            <para></para>
            </summary>
            <param name="inDirItemRef">The reference of the directory item.</param>
            <param name="outDirItemInfo">Information of the directory item.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData``1(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,``0@)">
            <summary>
            Gets property information from the object designated in inRef.
            This method takes care of differences between SDK versions.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <typeparam name="T">The type of a struct. Must be on of the types described in the <see cref="T:EOSDigital.SDK.DataType"/> enum</typeparam>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyDataSub``1(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,``0@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <typeparam name="T">The type of a struct. Must be on of the types described in the <see cref="T:EOSDigital.SDK.DataType"/> enum</typeparam>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Boolean@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Byte@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Int16@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.UInt16@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.UInt32@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Int32@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.String@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Boolean[]@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Int16[]@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Int32[]@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.Byte[]@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,System.UInt32[]@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.Rational[]@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.Time@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.FocusInfo@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.FocusPoint@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.Size@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.Rectangle@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.Point@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.MyMenuItems@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="M:EOSDigital.SDK.CanonSDK.GetPropertyData(System.IntPtr,EOSDigital.SDK.PropertyID,System.Int32,EOSDigital.SDK.PictureStyleDesc@)">
            <summary>
            Gets property information from the object designated in inRef.
            </summary>
            <param name="inRef">The reference of the item.</param>
            <param name="inPropertyID">The property ID.</param>
            <param name="inParam">Additional information of property. Used in order to specify an index in case there are two or more values over the same ID.</param>
            <param name="outPropertyData">The value of the property.</param>
            <returns>Any of the SDK errors</returns>
        </member>
        <member name="T:EOSDigital.SDK.Point">
            <summary>
            Point
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Point.X">
            <summary>
            X Coordinate
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Point.Y">
            <summary>
            Y Coordinate
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Point"/> struct
            </summary>
            <param name="X">X Coordinate</param>
            <param name="Y">Y Coordinate</param>
        </member>
        <member name="M:EOSDigital.SDK.Point.op_Equality(EOSDigital.SDK.Point,EOSDigital.SDK.Point)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Point"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Point"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Point"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Point"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Point.op_Inequality(EOSDigital.SDK.Point,EOSDigital.SDK.Point)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Point"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Point"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Point"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Point"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Point.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Point"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.Point"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Point"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.Point.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Point"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Point"/></returns>
        </member>
        <member name="M:EOSDigital.SDK.Point.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:EOSDigital.SDK.Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Size.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Size.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.Size.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Size"/> struct
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.Size.op_Equality(EOSDigital.SDK.Size,EOSDigital.SDK.Size)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Size"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Size"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Size"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Size"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Size.op_Inequality(EOSDigital.SDK.Size,EOSDigital.SDK.Size)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Size"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Size"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Size"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Size"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Size.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Size"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.Size"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Size"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.Size.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Size"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Size"/></returns>
        </member>
        <member name="M:EOSDigital.SDK.Size.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:EOSDigital.SDK.Rectangle">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Rectangle.X">
            <summary>
            X Coordinate
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Rectangle.Y">
            <summary>
            Y Coordinate
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Rectangle.Width">
            <summary>
            Width of the rectangle
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Rectangle.Height">
            <summary>
            Height of the rectangle
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.Rectangle.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Rectangle"/> struct
            </summary>
            <param name="Width">Width of the rectangle</param>
            <param name="Height">Height of the rectangle</param>
        </member>
        <member name="M:EOSDigital.SDK.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Rectangle"/> struct
            </summary>
            <param name="X">X Coordinate</param>
            <param name="Y">Y Coordinate</param>
            <param name="Width">Width of the rectangle</param>
            <param name="Height">Height of the rectangle</param>
        </member>
        <member name="M:EOSDigital.SDK.Rectangle.op_Equality(EOSDigital.SDK.Rectangle,EOSDigital.SDK.Rectangle)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Rectangle"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Rectangle"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Rectangle"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Rectangle"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rectangle.op_Inequality(EOSDigital.SDK.Rectangle,EOSDigital.SDK.Rectangle)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Rectangle"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Rectangle"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Rectangle"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Rectangle"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rectangle.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Rectangle"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.Rectangle"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Rectangle"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rectangle.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Size"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Size"/></returns>
        </member>
        <member name="M:EOSDigital.SDK.Rectangle.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:EOSDigital.SDK.Rational">
            <summary>
            Rational
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Rational.Numerator">
            <summary>
            Numerator of the rational number
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Rational.Denominator">
            <summary>
            Denominator of the rational number
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.Rational.op_Implicit(EOSDigital.SDK.Rational)~System.Double">
            <summary>
            Calculates the value as double
            </summary>
            <param name="val">The given Rational value</param>
            <returns>The Rational as double</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rational.op_Implicit(EOSDigital.SDK.Rational)~System.Decimal">
            <summary>
            Calculates the value as decimal
            </summary>
            <param name="val">The given Rational value</param>
            <returns>The Rational as decimal</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rational.op_Equality(EOSDigital.SDK.Rational,EOSDigital.SDK.Rational)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Rational"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Rational"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Rational"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Rational"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rational.op_Inequality(EOSDigital.SDK.Rational,EOSDigital.SDK.Rational)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Rational"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Rational"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Rational"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Rational"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rational.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Rational"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.Rational"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Rational"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.Rational.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Rational"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Rational"/></returns>
        </member>
        <member name="M:EOSDigital.SDK.Rational.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:EOSDigital.SDK.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Time.Year">
            <summary>
            Year component
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Time.Month">
            <summary>
            Month component
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Time.Day">
            <summary>
            Day component
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Time.Hour">
            <summary>
            Hour component
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Time.Minute">
            <summary>
            Minute component
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Time.Second">
            <summary>
            Second component
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Time.Milliseconds">
            <summary>
            Milliseconds component
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.Time.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Time"/> struct
            </summary>
            <param name="Year">Year component</param>
            <param name="Month">Month component</param>
            <param name="Day">Day component</param>
        </member>
        <member name="M:EOSDigital.SDK.Time.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Time"/> struct
            </summary>
            <param name="Year">Year component</param>
            <param name="Month">Month component</param>
            <param name="Day">Day component</param>
            <param name="Hour">Hour component</param>
        </member>
        <member name="M:EOSDigital.SDK.Time.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Time"/> struct
            </summary>
            <param name="Year">Year component</param>
            <param name="Month">Month component</param>
            <param name="Day">Day component</param>
            <param name="Hour">Hour component</param>
            <param name="Minute">Minute component</param>
        </member>
        <member name="M:EOSDigital.SDK.Time.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Time"/> struct
            </summary>
            <param name="Year">Year component</param>
            <param name="Month">Month component</param>
            <param name="Day">Day component</param>
            <param name="Hour">Hour component</param>
            <param name="Minute">Minute component</param>
            <param name="Second">Second component</param>
        </member>
        <member name="M:EOSDigital.SDK.Time.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Time"/> struct
            </summary>
            <param name="Year">Year component</param>
            <param name="Month">Month component</param>
            <param name="Day">Day component</param>
            <param name="Hour">Hour component</param>
            <param name="Minute">Minute component</param>
            <param name="Second">Second component</param>
            <param name="Milliseconds">Milliseconds component</param>
        </member>
        <member name="M:EOSDigital.SDK.Time.op_Implicit(EOSDigital.SDK.Time)~System.DateTime">
            <summary>
            Implicitly converts <see cref="T:EOSDigital.SDK.Time"/> to <see cref="T:System.DateTime"/>
            /// </summary>
            <param name="t">The <see cref="T:EOSDigital.SDK.Time"/> to convert</param>
            <returns>The <see cref="T:System.DateTime"/></returns>
        </member>
        <member name="M:EOSDigital.SDK.Time.op_Implicit(System.DateTime)~EOSDigital.SDK.Time">
            <summary>
            Implicitly converts <see cref="T:System.DateTime"/> to <see cref="T:EOSDigital.SDK.Time"/>
            </summary>
            <param name="t">The <see cref="T:System.DateTime"/> to convert</param>
            <returns>The <see cref="T:EOSDigital.SDK.Time"/></returns>
        </member>
        <member name="M:EOSDigital.SDK.Time.op_Equality(EOSDigital.SDK.Time,EOSDigital.SDK.Time)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Time"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Time"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Time"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Time"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Time.op_Inequality(EOSDigital.SDK.Time,EOSDigital.SDK.Time)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Time"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Time"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Time"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Time"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Time.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Time"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.Time"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Time"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.Time.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Time"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Time"/></returns>
        </member>
        <member name="M:EOSDigital.SDK.Time.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:EOSDigital.SDK.DeviceInfo">
            <summary>
            Device Info
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DeviceInfo.PortName">
            <summary>
            Name of port
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DeviceInfo.DeviceDescription">
            <summary>
            Name of device
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DeviceInfo.DeviceSubType">
            <summary>
            Device Sub-type
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.DeviceInfo.op_Equality(EOSDigital.SDK.DeviceInfo,EOSDigital.SDK.DeviceInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.DeviceInfo"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.DeviceInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.DeviceInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.DeviceInfo"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.DeviceInfo.op_Inequality(EOSDigital.SDK.DeviceInfo,EOSDigital.SDK.DeviceInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.DeviceInfo"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.DeviceInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.DeviceInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.DeviceInfo"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.DeviceInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.DeviceInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.DeviceInfo"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.DeviceInfo"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.DeviceInfo.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.DeviceInfo"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.DeviceInfo"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.VolumeInfo">
            <summary>
            Volume Info
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.VolumeInfo.StorageType">
            <summary>
            Type of storage
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.VolumeInfo.Access">
            <summary>
            Accessibility
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.VolumeInfo.MaxCapacity">
            <summary>
            Maximum capacity
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.VolumeInfo.FreeSpaceInBytes">
            <summary>
            Free space on volume in bytes
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.VolumeInfo.VolumeLabel">
            <summary>
            Label/name of the volume
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.VolumeInfo.op_Equality(EOSDigital.SDK.VolumeInfo,EOSDigital.SDK.VolumeInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.VolumeInfo"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.VolumeInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.VolumeInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.VolumeInfo"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.VolumeInfo.op_Inequality(EOSDigital.SDK.VolumeInfo,EOSDigital.SDK.VolumeInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.VolumeInfo"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.VolumeInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.VolumeInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.VolumeInfo"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.VolumeInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.VolumeInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.VolumeInfo"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.VolumeInfo"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.VolumeInfo.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.VolumeInfo"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.VolumeInfo"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.DirectoryItemInfo">
            <summary>
            DirectoryItem Info
            </summary>
        </member>
        <member name="P:EOSDigital.SDK.DirectoryItemInfo.Size">
            <summary>
            Size of directory item
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DirectoryItemInfo.Size64">
            <summary>
            Size of directory item (as long)
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DirectoryItemInfo.IsFolder">
            <summary>
            Marker if it's a folder or a file
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DirectoryItemInfo.GroupID">
            <summary>
            Group ID
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DirectoryItemInfo.Option">
            <summary>
            Option
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DirectoryItemInfo.FileName">
            <summary>
            File name
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DirectoryItemInfo.Format">
            <summary>
            Format
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.DirectoryItemInfo.DateTime">
            <summary>
            Date time
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.DirectoryItemInfo.op_Equality(EOSDigital.SDK.DirectoryItemInfo,EOSDigital.SDK.DirectoryItemInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.DirectoryItemInfo.op_Inequality(EOSDigital.SDK.DirectoryItemInfo,EOSDigital.SDK.DirectoryItemInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.DirectoryItemInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.DirectoryItemInfo.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.DirectoryItemInfo"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.DirectoryItemInfo_3_4">
            <summary>
            DirectoryItemInfo struct for SDK versions &lt;3.4
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.ImageInfo">
            <summary>
            Image Info
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageInfo.Width">
            <summary>
            Width of image
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageInfo.Height">
            <summary>
            Height of image
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageInfo.NumOfComponents">
            <summary>
            Number of channels
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageInfo.ComponentDepth">
            <summary>
            Bitdepth of channels
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.ImageInfo.EffectiveRect">
            <summary>
            Effective size of image
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.ImageInfo.op_Equality(EOSDigital.SDK.ImageInfo,EOSDigital.SDK.ImageInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.ImageInfo"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.ImageInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.ImageInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.ImageInfo"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.ImageInfo.op_Inequality(EOSDigital.SDK.ImageInfo,EOSDigital.SDK.ImageInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.ImageInfo"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.ImageInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.ImageInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.ImageInfo"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.ImageInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.ImageInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.ImageInfo"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.ImageInfo"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.ImageInfo.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.ImageInfo"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.ImageInfo"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.SaveImageSetting">
            <summary>
            SaveImage Setting
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.SaveImageSetting.JPEGQuality">
            <summary>
            Quality of Jpeg file (1-10)
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.SaveImageSetting.ICCProfileStream">
            <summary>
            Pointer to ICC profile stream
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.SaveImageSetting.op_Equality(EOSDigital.SDK.SaveImageSetting,EOSDigital.SDK.SaveImageSetting)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.SaveImageSetting"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.SaveImageSetting"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.SaveImageSetting"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.SaveImageSetting"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.SaveImageSetting.op_Inequality(EOSDigital.SDK.SaveImageSetting,EOSDigital.SDK.SaveImageSetting)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.SaveImageSetting"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.SaveImageSetting"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.SaveImageSetting"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.SaveImageSetting"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.SaveImageSetting.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.SaveImageSetting"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.SaveImageSetting"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.SaveImageSetting"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.SaveImageSetting.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.SaveImageSetting"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.SaveImageSetting"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.PropertyDesc">
            <summary>
            Property Description
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PropertyDesc.Form">
            <summary>
            Form
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PropertyDesc.Access">
            <summary>
            Accessibility
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PropertyDesc.NumElements">
            <summary>
            Number of elements
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PropertyDesc.PropDesc">
            <summary>
            Array of all elements
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.PropertyDesc.op_Equality(EOSDigital.SDK.PropertyDesc,EOSDigital.SDK.PropertyDesc)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.PropertyDesc"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.PropertyDesc"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.PropertyDesc"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.PropertyDesc"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.PropertyDesc.op_Inequality(EOSDigital.SDK.PropertyDesc,EOSDigital.SDK.PropertyDesc)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.PropertyDesc"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.PropertyDesc"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.PropertyDesc"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.PropertyDesc"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.PropertyDesc.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.PropertyDesc"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.PropertyDesc"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.PropertyDesc"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.PropertyDesc.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Time"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Time"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.PictureStyleDesc">
            <summary>
            Picture Style Description
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.Contrast">
            <summary>
            Contrast; Range: -4 to 4
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.Sharpness">
            <summary>
            Sharpness; Range: 0 to 7
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.Saturation">
            <summary>
            Saturation; Range: -4 to 4
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.ColorTone">
            <summary>
            ColorTone; Range: -4 to 4
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.FilterEffect">
            <summary>
            Filter Effect
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.ToningEffect">
            <summary>
            Toning Effect
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.SharpFineness">
            <summary>
            Sharp Fineness
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.PictureStyleDesc.SharpThreshold">
            <summary>
            Sharp Threshold
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.PictureStyleDesc.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.PictureStyleDesc"/> struct
            </summary>
            <param name="Contrast">Range: -4 to 4</param>
            <param name="Sharpness">Range: 0 to 7</param>
            <param name="Saturation">Range: -4 to 4</param>
            <param name="ColorTone">Range: -4 to 4</param>
            <param name="FilterEffect">Filter Effect</param>
            <param name="ToningEffect">Toning Effect</param>
        </member>
        <member name="M:EOSDigital.SDK.PictureStyleDesc.op_Equality(EOSDigital.SDK.PictureStyleDesc,EOSDigital.SDK.PictureStyleDesc)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.PictureStyleDesc"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.PictureStyleDesc"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.PictureStyleDesc"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.PictureStyleDesc"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.PictureStyleDesc.op_Inequality(EOSDigital.SDK.PictureStyleDesc,EOSDigital.SDK.PictureStyleDesc)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.PictureStyleDesc"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.PictureStyleDesc"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.PictureStyleDesc"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.PictureStyleDesc"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.PictureStyleDesc.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.PictureStyleDesc"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.PictureStyleDesc"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.PictureStyleDesc"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.PictureStyleDesc.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.PictureStyleDesc"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.PictureStyleDesc"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.PictureStyleDesc_3_2">
            <summary>
            PictureStyleDesc struct for SDK versions &lt;3.2
            </summary>
        </member>
        <member name="T:EOSDigital.SDK.FocusPoint">
            <summary>
            Focus Point
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusPoint.Valid">
            <summary>
            <para>Invalid AF frame: 0</para>
            <para>Valid AF frame: 1</para>
            <para>Note: There are as many valid AF frames as the number in
            FrameNumber. Usually, AF frames are recorded consecutively, starting with 0.</para>
            <para>Note: AF frame coordinates and the array number for storage vary by model.</para>
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusPoint.Selected">
            <summary>
            <para>Selected AF frame: 0</para>
            <para>Unselected AF frame: 1</para>
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusPoint.JustFocus">
            <summary>
            <para>In focus: 1</para>
            <para>Out of focus: 0</para>
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusPoint.Rectangle">
            <summary>
            Upper-left and lower-right coordinates of the AF frame
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.FocusPoint.op_Equality(EOSDigital.SDK.FocusPoint,EOSDigital.SDK.FocusPoint)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.FocusPoint"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.FocusPoint"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.FocusPoint"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.FocusPoint"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.FocusPoint.op_Inequality(EOSDigital.SDK.FocusPoint,EOSDigital.SDK.FocusPoint)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.FocusPoint"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.FocusPoint"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.FocusPoint"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.FocusPoint"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.FocusPoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.FocusPoint"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.FocusPoint"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.FocusPoint"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.FocusPoint.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Time"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Time"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.FocusInfo">
            <summary>
            Focus Info
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusInfo.ImageRectangle">
            <summary>
            The upper-left coordinates of the image, as well as the width and height
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusInfo.PointNumber">
            <summary>
            AF frame number
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusInfo.FocusPoints">
            <summary>
            Detailed information about focus points
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.FocusInfo.ExecuteMode">
            <summary>
            Execute Mode
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.FocusInfo.op_Equality(EOSDigital.SDK.FocusInfo,EOSDigital.SDK.FocusInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.FocusInfo"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.FocusInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.FocusInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.FocusInfo"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.FocusInfo.op_Inequality(EOSDigital.SDK.FocusInfo,EOSDigital.SDK.FocusInfo)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.FocusInfo"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.FocusInfo"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.FocusInfo"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.FocusInfo"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.FocusInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.FocusInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.FocusInfo"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.FocusInfo"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.FocusInfo.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.FocusInfo"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.FocusInfo"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.UsersetData">
            <summary>
            User WhiteBalance (PC set1,2,3); User ToneCurve; User PictureStyle dataset
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.UsersetData.Valid">
            <summary>
            Marker if data is valid
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.UsersetData.DataSize">
            <summary>
            Size of data
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.UsersetData.Caption">
            <summary>
            Caption
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.UsersetData.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.UsersetData.op_Equality(EOSDigital.SDK.UsersetData,EOSDigital.SDK.UsersetData)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.UsersetData"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.UsersetData"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.UsersetData"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.UsersetData"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.UsersetData.op_Inequality(EOSDigital.SDK.UsersetData,EOSDigital.SDK.UsersetData)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.UsersetData"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.UsersetData"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.UsersetData"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.UsersetData"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.UsersetData.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.UsersetData"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.UsersetData"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.UsersetData"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.UsersetData.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.UsersetData"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.UsersetData"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.Capacity">
            <summary>
            Capacity
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Capacity.NumberOfFreeClusters">
            <summary>
            Number of free clusters on the HD
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Capacity.BytesPerSector">
            <summary>
            Bytes per HD sector
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.Capacity.Reset">
            <summary>
            Reset flag
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.Capacity.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.Capacity"/> struct
            </summary>
            <param name="BytesPerSector">Bytes per HD sector</param>
            <param name="NumberOfFreeClusters">Number of free clusters on the HD</param>
            <param name="Reset"></param>
        </member>
        <member name="M:EOSDigital.SDK.Capacity.op_Equality(EOSDigital.SDK.Capacity,EOSDigital.SDK.Capacity)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Capacity"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Capacity"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Capacity"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Capacity"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Capacity.op_Inequality(EOSDigital.SDK.Capacity,EOSDigital.SDK.Capacity)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.Capacity"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.Capacity"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.Capacity"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.Capacity"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.Capacity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Capacity"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.Capacity"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.Capacity"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.Capacity.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.Capacity"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.Capacity"/></returns>
        </member>
        <member name="T:EOSDigital.SDK.MyMenuItems">
            <summary>
            MyMenu Items
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.MyMenuItems.MenuItem1">
            <summary>
            Menu Item 1
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.MyMenuItems.MenuItem2">
            <summary>
            Menu Item 2
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.MyMenuItems.MenuItem3">
            <summary>
            Menu Item 3
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.MyMenuItems.MenuItem4">
            <summary>
            Menu Item 4
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.MyMenuItems.MenuItem5">
            <summary>
            Menu Item 5
            </summary>
        </member>
        <member name="F:EOSDigital.SDK.MyMenuItems.MenuItem6">
            <summary>
            Menu Item 6
            </summary>
        </member>
        <member name="M:EOSDigital.SDK.MyMenuItems.#ctor(EOSDigital.SDK.MyMenuID[])">
            <summary>
            Creates a new instance of the <see cref="T:EOSDigital.SDK.MyMenuItems"/> struct
            </summary>
            <param name="items">Array of items (max length is 6)</param>
            <exception cref="T:System.ArgumentNullException">The array of given items is null</exception>
        </member>
        <member name="M:EOSDigital.SDK.MyMenuItems.op_Equality(EOSDigital.SDK.MyMenuItems,EOSDigital.SDK.MyMenuItems)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.MyMenuItems"/>s are equal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.MyMenuItems"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.MyMenuItems"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.MyMenuItems"/>s are equal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.MyMenuItems.op_Inequality(EOSDigital.SDK.MyMenuItems,EOSDigital.SDK.MyMenuItems)">
            <summary>
            Determines whether the specified <see cref="T:EOSDigital.SDK.MyMenuItems"/>s are unequal to each other.
            </summary>
            <param name="x">The first <see cref="T:EOSDigital.SDK.MyMenuItems"/></param>
            <param name="y">The second <see cref="T:EOSDigital.SDK.MyMenuItems"/></param>
            <returns>True if the <see cref="T:EOSDigital.SDK.MyMenuItems"/>s are unequal; otherwise, false</returns>
        </member>
        <member name="M:EOSDigital.SDK.MyMenuItems.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.MyMenuItems"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:EOSDigital.SDK.MyMenuItems"/></param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:EOSDigital.SDK.MyMenuItems"/>; otherwise, false.</returns>
        </member>
        <member name="M:EOSDigital.SDK.MyMenuItems.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:EOSDigital.SDK.MyMenuItems"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:EOSDigital.SDK.MyMenuItems"/></returns>
        </member>
    </members>
</doc>
